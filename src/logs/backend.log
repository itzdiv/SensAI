2025-08-07 13:04:51,650 - api.utils.logging - INFO - Executing operation: SELECT name FROM sqlite_master WHERE type='table' AND name='code_drafts'
2025-08-07 13:04:51,653 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS code_drafts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                question_id INTEGER NOT NULL,
                code TEXT NOT NULL,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(user_id, question_id),
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE
            )
2025-08-07 13:04:51,659 - api.utils.logging - INFO - Executing operation: CREATE INDEX IF NOT EXISTS idx_code_drafts_user_id ON code_drafts (user_id)
2025-08-07 13:04:51,660 - api.utils.logging - INFO - Executing operation: CREATE INDEX IF NOT EXISTS idx_code_drafts_question_id ON code_drafts (question_id)
2025-08-07 13:15:53,157 - api.utils.logging - INFO - Executing operation: SELECT name FROM sqlite_master WHERE type='table' AND name='code_drafts'
2025-08-07 13:16:08,672 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:34:35,861 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:34:45,757 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:35:31,045 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:35:40,425 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:39:11,106 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:39:31,530 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:41:15,285 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:42:42,632 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:42:57,955 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:48:37,894 - api.utils.logging - INFO - Executing operation: SELECT name FROM sqlite_master WHERE type='table' AND name='code_drafts'
2025-08-07 13:52:46,463 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:53:52,280 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:55:02,564 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:56:56,208 - api.utils.logging - INFO - Logging system initialized
2025-08-07 13:59:21,747 - api.utils.logging - INFO - Executing operation: SELECT name FROM sqlite_master WHERE type='table' AND name='code_drafts'
2025-08-07 14:02:49,307 - api.utils.logging - INFO - Executing operation: SELECT name FROM sqlite_master WHERE type='table' AND name='code_drafts'
2025-08-07 14:03:00,361 - api.utils.logging - INFO - Logging system initialized
2025-08-07 14:46:15,875 - api.utils.logging - INFO - Logging system initialized
2025-08-07 14:52:59,811 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS organizations (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                slug TEXT NOT NULL UNIQUE,
                name TEXT NOT NULL,
                default_logo_color TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                openai_api_key TEXT,
                openai_free_trial BOOLEAN
            )
2025-08-07 14:52:59,820 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_org_slug ON organizations (slug)
2025-08-07 14:52:59,821 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS org_api_keys (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                org_id INTEGER NOT NULL,
                hashed_key TEXT NOT NULL UNIQUE,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,821 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_org_api_key_org_id ON org_api_keys (org_id)
2025-08-07 14:52:59,822 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_org_api_key_hashed_key ON org_api_keys (hashed_key)
2025-08-07 14:52:59,822 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                email TEXT NOT NULL UNIQUE,
                first_name TEXT,
                middle_name TEXT,
                last_name TEXT,
                default_dp_color TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
2025-08-07 14:52:59,823 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS user_organizations (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                org_id INTEGER NOT NULL,
                role TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(user_id, org_id),
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,823 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_user_org_user_id ON user_organizations (user_id)
2025-08-07 14:52:59,824 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_user_org_org_id ON user_organizations (org_id)
2025-08-07 14:52:59,824 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS milestones (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                org_id INTEGER NOT NULL,
                name TEXT NOT NULL,
                color TEXT,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,824 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_milestone_org_id ON milestones (org_id)
2025-08-07 14:52:59,825 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS cohorts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                org_id INTEGER NOT NULL,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,825 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_cohort_org_id ON cohorts (org_id)
2025-08-07 14:52:59,826 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS user_cohorts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                cohort_id INTEGER NOT NULL,
                role TEXT NOT NULL,
                joined_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(user_id, cohort_id),
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (cohort_id) REFERENCES cohorts(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,826 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_user_cohort_user_id ON user_cohorts (user_id)
2025-08-07 14:52:59,829 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_user_cohort_cohort_id ON user_cohorts (cohort_id)
2025-08-07 14:52:59,829 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS courses (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                org_id INTEGER NOT NULL,
                name TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,830 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_org_id ON courses (org_id)
2025-08-07 14:52:59,830 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS course_cohorts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                course_id INTEGER NOT NULL,
                cohort_id INTEGER NOT NULL,
                is_drip_enabled BOOLEAN DEFAULT FALSE,
                frequency_value INTEGER,
                frequency_unit TEXT,
                publish_at DATETIME,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(course_id, cohort_id),
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE,
                FOREIGN KEY (cohort_id) REFERENCES cohorts(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,831 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_cohort_course_id ON course_cohorts (course_id)
2025-08-07 14:52:59,831 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_cohort_cohort_id ON course_cohorts (cohort_id)
2025-08-07 14:52:59,832 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS tasks (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    org_id INTEGER NOT NULL,
                    type TEXT NOT NULL,
                    blocks TEXT,
                    title TEXT NOT NULL,
                    status TEXT NOT NULL,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    deleted_at DATETIME,
                    scheduled_publish_at DATETIME,
                    FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
                )
2025-08-07 14:52:59,832 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_org_id ON tasks (org_id)
2025-08-07 14:52:59,833 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS questions (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                task_id INTEGER NOT NULL,
                type TEXT NOT NULL,
                blocks TEXT,
                answer TEXT,
                input_type TEXT NOT NULL,
                coding_language TEXT,
                generation_model TEXT,
                response_type TEXT NOT NULL,
                position INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                deleted_at DATETIME,
                max_attempts INTEGER,
                is_feedback_shown BOOLEAN NOT NULL,
                context TEXT,
                title TEXT NOT NULL,
                FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,833 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_question_task_id ON questions (task_id)
2025-08-07 14:52:59,833 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS scorecards (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                org_id INTEGER NOT NULL,
                title TEXT NOT NULL,
                criteria TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                status TEXT,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,834 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_scorecard_org_id ON scorecards (org_id)
2025-08-07 14:52:59,834 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS question_scorecards (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                question_id INTEGER NOT NULL,
                scorecard_id INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE,
                FOREIGN KEY (scorecard_id) REFERENCES scorecards(id) ON DELETE CASCADE,
                UNIQUE(question_id, scorecard_id)
            )
2025-08-07 14:52:59,835 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_question_scorecard_question_id ON question_scorecards (question_id)
2025-08-07 14:52:59,835 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_question_scorecard_scorecard_id ON question_scorecards (scorecard_id)
2025-08-07 14:52:59,835 - api.utils.logging - INFO - Executing operation: 
                CREATE TABLE IF NOT EXISTS chat_history (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    user_id INTEGER NOT NULL,
                    question_id INTEGER NOT NULL,
                    role TEXT NOT NULL,
                    content TEXT,
                    response_type TEXT,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (question_id) REFERENCES questions(id),
                    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
                )
2025-08-07 14:52:59,836 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_chat_history_user_id ON chat_history (user_id)
2025-08-07 14:52:59,837 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_chat_history_question_id ON chat_history (question_id)
2025-08-07 14:52:59,837 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS task_completions (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                task_id INTEGER,
                question_id INTEGER,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
                FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE,
                UNIQUE(user_id, task_id),
                UNIQUE(user_id, question_id)
            )
2025-08-07 14:52:59,840 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_completion_user_id ON task_completions (user_id)
2025-08-07 14:52:59,840 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_completion_task_id ON task_completions (task_id)
2025-08-07 14:52:59,840 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_completion_question_id ON task_completions (question_id)
2025-08-07 14:52:59,840 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS course_tasks (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                task_id INTEGER NOT NULL,
                course_id INTEGER NOT NULL,
                ordering INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                milestone_id INTEGER,
                UNIQUE(task_id, course_id),
                FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE,
                FOREIGN KEY (milestone_id) REFERENCES milestones(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,841 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_task_task_id ON course_tasks (task_id)
2025-08-07 14:52:59,842 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_task_course_id ON course_tasks (course_id)
2025-08-07 14:52:59,842 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_task_milestone_id ON course_tasks (milestone_id)
2025-08-07 14:52:59,843 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS course_milestones (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                course_id INTEGER NOT NULL,
                milestone_id INTEGER,
                ordering INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(course_id, milestone_id),
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE,
                FOREIGN KEY (milestone_id) REFERENCES milestones(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,843 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_milestone_course_id ON course_milestones (course_id)
2025-08-07 14:52:59,843 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_milestone_milestone_id ON course_milestones (milestone_id)
2025-08-07 14:52:59,844 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS course_generation_jobs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                uuid TEXT NOT NULL,
                course_id INTEGER NOT NULL,
                status TEXT NOT NULL,
                job_details TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,844 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_generation_job_course_id ON course_generation_jobs (course_id)
2025-08-07 14:52:59,845 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS task_generation_jobs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                uuid TEXT NOT NULL,
                task_id INTEGER NOT NULL,
                course_id INTEGER NOT NULL,
                status TEXT NOT NULL,
                job_details TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,845 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_generation_job_task_id ON task_generation_jobs (task_id)
2025-08-07 14:52:59,846 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_generation_job_course_id ON task_generation_jobs (course_id)
2025-08-07 14:52:59,846 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS code_drafts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                question_id INTEGER NOT NULL,
                code TEXT NOT NULL,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(user_id, question_id),
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE
            )
2025-08-07 14:52:59,846 - api.utils.logging - INFO - Executing operation: CREATE INDEX IF NOT EXISTS idx_code_drafts_user_id ON code_drafts (user_id)
2025-08-07 14:52:59,846 - api.utils.logging - INFO - Executing operation: CREATE INDEX IF NOT EXISTS idx_code_drafts_question_id ON code_drafts (question_id)
2025-08-07 14:57:09,898 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS organizations (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                slug TEXT NOT NULL UNIQUE,
                name TEXT NOT NULL,
                default_logo_color TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                openai_api_key TEXT,
                openai_free_trial BOOLEAN
            )
2025-08-07 14:57:09,903 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_org_slug ON organizations (slug)
2025-08-07 14:57:09,904 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS org_api_keys (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                org_id INTEGER NOT NULL,
                hashed_key TEXT NOT NULL UNIQUE,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,904 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_org_api_key_org_id ON org_api_keys (org_id)
2025-08-07 14:57:09,904 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_org_api_key_hashed_key ON org_api_keys (hashed_key)
2025-08-07 14:57:09,905 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                email TEXT NOT NULL UNIQUE,
                first_name TEXT,
                middle_name TEXT,
                last_name TEXT,
                default_dp_color TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
2025-08-07 14:57:09,905 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS user_organizations (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                org_id INTEGER NOT NULL,
                role TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(user_id, org_id),
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,905 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_user_org_user_id ON user_organizations (user_id)
2025-08-07 14:57:09,905 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_user_org_org_id ON user_organizations (org_id)
2025-08-07 14:57:09,907 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS milestones (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                org_id INTEGER NOT NULL,
                name TEXT NOT NULL,
                color TEXT,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,907 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_milestone_org_id ON milestones (org_id)
2025-08-07 14:57:09,907 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS cohorts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                org_id INTEGER NOT NULL,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,907 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_cohort_org_id ON cohorts (org_id)
2025-08-07 14:57:09,907 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS user_cohorts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                cohort_id INTEGER NOT NULL,
                role TEXT NOT NULL,
                joined_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(user_id, cohort_id),
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (cohort_id) REFERENCES cohorts(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,907 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_user_cohort_user_id ON user_cohorts (user_id)
2025-08-07 14:57:09,908 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_user_cohort_cohort_id ON user_cohorts (cohort_id)
2025-08-07 14:57:09,908 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS courses (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                org_id INTEGER NOT NULL,
                name TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,908 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_org_id ON courses (org_id)
2025-08-07 14:57:09,909 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS course_cohorts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                course_id INTEGER NOT NULL,
                cohort_id INTEGER NOT NULL,
                is_drip_enabled BOOLEAN DEFAULT FALSE,
                frequency_value INTEGER,
                frequency_unit TEXT,
                publish_at DATETIME,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(course_id, cohort_id),
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE,
                FOREIGN KEY (cohort_id) REFERENCES cohorts(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,909 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_cohort_course_id ON course_cohorts (course_id)
2025-08-07 14:57:09,910 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_cohort_cohort_id ON course_cohorts (cohort_id)
2025-08-07 14:57:09,911 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS tasks (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    org_id INTEGER NOT NULL,
                    type TEXT NOT NULL,
                    blocks TEXT,
                    title TEXT NOT NULL,
                    status TEXT NOT NULL,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    deleted_at DATETIME,
                    scheduled_publish_at DATETIME,
                    FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
                )
2025-08-07 14:57:09,912 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_org_id ON tasks (org_id)
2025-08-07 14:57:09,912 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS questions (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                task_id INTEGER NOT NULL,
                type TEXT NOT NULL,
                blocks TEXT,
                answer TEXT,
                input_type TEXT NOT NULL,
                coding_language TEXT,
                generation_model TEXT,
                response_type TEXT NOT NULL,
                position INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                deleted_at DATETIME,
                max_attempts INTEGER,
                is_feedback_shown BOOLEAN NOT NULL,
                context TEXT,
                title TEXT NOT NULL,
                FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,914 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_question_task_id ON questions (task_id)
2025-08-07 14:57:09,915 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS scorecards (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                org_id INTEGER NOT NULL,
                title TEXT NOT NULL,
                criteria TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                status TEXT,
                FOREIGN KEY (org_id) REFERENCES organizations(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,916 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_scorecard_org_id ON scorecards (org_id)
2025-08-07 14:57:09,917 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS question_scorecards (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                question_id INTEGER NOT NULL,
                scorecard_id INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE,
                FOREIGN KEY (scorecard_id) REFERENCES scorecards(id) ON DELETE CASCADE,
                UNIQUE(question_id, scorecard_id)
            )
2025-08-07 14:57:09,917 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_question_scorecard_question_id ON question_scorecards (question_id)
2025-08-07 14:57:09,917 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_question_scorecard_scorecard_id ON question_scorecards (scorecard_id)
2025-08-07 14:57:09,917 - api.utils.logging - INFO - Executing operation: 
                CREATE TABLE IF NOT EXISTS chat_history (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    user_id INTEGER NOT NULL,
                    question_id INTEGER NOT NULL,
                    role TEXT NOT NULL,
                    content TEXT,
                    response_type TEXT,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (question_id) REFERENCES questions(id),
                    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
                )
2025-08-07 14:57:09,917 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_chat_history_user_id ON chat_history (user_id)
2025-08-07 14:57:09,918 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_chat_history_question_id ON chat_history (question_id)
2025-08-07 14:57:09,918 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS task_completions (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                task_id INTEGER,
                question_id INTEGER,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
                FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE,
                UNIQUE(user_id, task_id),
                UNIQUE(user_id, question_id)
            )
2025-08-07 14:57:09,918 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_completion_user_id ON task_completions (user_id)
2025-08-07 14:57:09,919 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_completion_task_id ON task_completions (task_id)
2025-08-07 14:57:09,919 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_completion_question_id ON task_completions (question_id)
2025-08-07 14:57:09,920 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS course_tasks (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                task_id INTEGER NOT NULL,
                course_id INTEGER NOT NULL,
                ordering INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                milestone_id INTEGER,
                UNIQUE(task_id, course_id),
                FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE,
                FOREIGN KEY (milestone_id) REFERENCES milestones(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,920 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_task_task_id ON course_tasks (task_id)
2025-08-07 14:57:09,920 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_task_course_id ON course_tasks (course_id)
2025-08-07 14:57:09,921 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_task_milestone_id ON course_tasks (milestone_id)
2025-08-07 14:57:09,922 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS course_milestones (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                course_id INTEGER NOT NULL,
                milestone_id INTEGER,
                ordering INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(course_id, milestone_id),
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE,
                FOREIGN KEY (milestone_id) REFERENCES milestones(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,923 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_milestone_course_id ON course_milestones (course_id)
2025-08-07 14:57:09,923 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_milestone_milestone_id ON course_milestones (milestone_id)
2025-08-07 14:57:09,924 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS course_generation_jobs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                uuid TEXT NOT NULL,
                course_id INTEGER NOT NULL,
                status TEXT NOT NULL,
                job_details TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,926 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_course_generation_job_course_id ON course_generation_jobs (course_id)
2025-08-07 14:57:09,926 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS task_generation_jobs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                uuid TEXT NOT NULL,
                task_id INTEGER NOT NULL,
                course_id INTEGER NOT NULL,
                status TEXT NOT NULL,
                job_details TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
                FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,926 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_generation_job_task_id ON task_generation_jobs (task_id)
2025-08-07 14:57:09,927 - api.utils.logging - INFO - Executing operation: CREATE INDEX idx_task_generation_job_course_id ON task_generation_jobs (course_id)
2025-08-07 14:57:09,927 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS code_drafts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER NOT NULL,
                question_id INTEGER NOT NULL,
                code TEXT NOT NULL,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(user_id, question_id),
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE
            )
2025-08-07 14:57:09,927 - api.utils.logging - INFO - Executing operation: CREATE INDEX IF NOT EXISTS idx_code_drafts_user_id ON code_drafts (user_id)
2025-08-07 14:57:09,928 - api.utils.logging - INFO - Executing operation: CREATE INDEX IF NOT EXISTS idx_code_drafts_question_id ON code_drafts (question_id)
2025-08-07 15:00:35,307 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:02:08,459 - api.utils.logging - INFO - Executing operation: SELECT * FROM users WHERE email = 'fukyu484@gmail.com'
2025-08-07 15:02:08,461 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:02:08,462 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO users (email, default_dp_color, first_name, middle_name, last_name)
        VALUES ('fukyu484@gmail.com', '#6ba58f', 'That', NULL, 'Guy')
    
2025-08-07 15:02:08,463 - api.utils.logging - INFO - Executing operation: SELECT * FROM users WHERE email = 'fukyu484@gmail.com'
2025-08-07 15:02:08,463 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:02:10,394 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:10,403 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 1
        
2025-08-07 15:02:10,408 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:10,413 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:10,533 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:10,542 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:10,549 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 1
        
2025-08-07 15:02:10,554 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:42,861 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:42,871 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:42,911 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:46,943 - api.utils.logging - INFO - Executing operation: SELECT * FROM users WHERE id = 1
2025-08-07 15:02:46,948 - api.utils.logging - INFO - Executing operation: SELECT id FROM organizations WHERE slug = 'httpsspsrmisteduinsrmiststudentportalstudentstemplatehrdsystemjsp'
2025-08-07 15:02:46,948 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:02:46,948 - api.utils.logging - INFO - Executing operation: INSERT INTO organizations 
                (slug, name)
                VALUES ('httpsspsrmisteduinsrmiststudentportalstudentstemplatehrdsystemjsp', 'SRM')
2025-08-07 15:02:46,949 - api.utils.logging - INFO - Executing operation: INSERT INTO user_organizations
            (user_id, org_id, role)
            VALUES (1, 1, 'owner')
2025-08-07 15:02:46,949 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:02:53,874 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:53,890 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:53,931 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 1
2025-08-07 15:02:53,949 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:53,950 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 1
2025-08-07 15:02:53,956 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 1
2025-08-07 15:02:53,978 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 1
2025-08-07 15:02:53,981 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 1
        ORDER BY c.id DESC
        
2025-08-07 15:02:53,996 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 1
        ORDER BY c.id DESC
        
2025-08-07 15:02:54,000 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 1 ORDER BY id DESC
2025-08-07 15:02:54,022 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 1 ORDER BY id DESC
2025-08-07 15:02:54,060 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:02:59,532 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 1
2025-08-07 15:02:59,537 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:02:59,537 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO courses (name, org_id)
        VALUES ('chinku', 1)
        
2025-08-07 15:02:59,537 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:03:03,386 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 1
2025-08-07 15:03:03,398 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:03:03,398 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO courses (name, org_id)
        VALUES ('cs', 1)
        
2025-08-07 15:03:03,398 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:03:08,975 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 1
2025-08-07 15:03:08,979 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:03:08,979 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO courses (name, org_id)
        VALUES ('cs', 1)
        
2025-08-07 15:03:08,980 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:03:15,572 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 3
        
2025-08-07 15:03:15,579 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 3
        
2025-08-07 15:03:15,585 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 1
2025-08-07 15:03:15,587 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 3
2025-08-07 15:03:15,596 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 1
2025-08-07 15:03:15,602 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 3 ORDER BY cm.ordering
2025-08-07 15:03:15,613 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 3 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 15:03:15,634 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 3
2025-08-07 15:03:15,643 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 3 ORDER BY cm.ordering
2025-08-07 15:03:15,654 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 3 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 15:03:15,701 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 1 ORDER BY uo.id DESC
2025-08-07 15:03:31,324 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 3
2025-08-07 15:03:31,329 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:03:31,329 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('New Module', '#553c2d', 1)
2025-08-07 15:03:31,330 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 3
2025-08-07 15:03:31,331 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (3, 1, 0)
2025-08-07 15:03:31,332 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:09:54,947 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:10:24,346 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:11:20,338 - api.utils.logging - INFO - Executing operation: SELECT * FROM users WHERE email = 'dm6840@srmist.edu.in'
2025-08-07 15:11:20,338 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:11:20,338 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO users (email, default_dp_color, first_name, middle_name, last_name)
        VALUES ('dm6840@srmist.edu.in', '#5be66f', 'DIVYANSH', NULL, 'MALANI (RA2211003030063)')
    
2025-08-07 15:11:20,339 - api.utils.logging - INFO - Executing operation: SELECT * FROM users WHERE email = 'dm6840@srmist.edu.in'
2025-08-07 15:11:20,339 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:11:20,896 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:20,906 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:20,908 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 2
        
2025-08-07 15:11:20,914 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:24,425 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:24,435 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:24,488 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:53,257 - api.utils.logging - INFO - Executing operation: SELECT * FROM users WHERE id = 2
2025-08-07 15:11:53,262 - api.utils.logging - INFO - Executing operation: SELECT id FROM organizations WHERE slug = 'tenchukidukancom'
2025-08-07 15:11:53,263 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:11:53,263 - api.utils.logging - INFO - Executing operation: INSERT INTO organizations 
                (slug, name)
                VALUES ('tenchukidukancom', 'Tenchu Menchu')
2025-08-07 15:11:53,263 - api.utils.logging - INFO - Executing operation: INSERT INTO user_organizations
            (user_id, org_id, role)
            VALUES (2, 2, 'owner')
2025-08-07 15:11:53,264 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:11:58,881 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:58,899 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:58,930 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:11:58,943 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:11:58,955 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:11:58,969 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 15:11:58,976 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 15:11:59,013 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 15:11:59,034 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 15:11:59,056 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 15:11:59,077 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 15:11:59,125 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:12:14,286 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:12:14,296 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 15:12:14,296 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO courses (name, org_id)
        VALUES ('How to be a Tenchu Menchu', 2)
        
2025-08-07 15:12:14,297 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 15:12:14,900 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 15:12:14,901 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:12:14,901 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:12:14,923 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 15:12:14,923 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 15:12:14,924 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:12:14,954 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 15:12:14,955 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 15:12:14,980 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 15:12:14,989 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 15:12:15,001 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 15:35:52,703 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:43:31,607 - api.utils.logging - INFO - Executing operation: CREATE TABLE IF NOT EXISTS organizations (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                slug TEXT NOT NULL UNIQUE,
                name TEXT NOT NULL,
                default_logo_color TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                openai_api_key TEXT,
                openai_free_trial BOOLEAN
            )
2025-08-07 15:44:19,191 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:46:35,252 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:49:01,709 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:53:08,496 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:56:29,876 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:57:42,129 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:57:59,684 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:59:23,994 - api.utils.logging - INFO - Logging system initialized
2025-08-07 15:59:33,770 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 2
        
2025-08-07 15:59:33,773 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:59:33,779 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:59:33,792 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 15:59:33,792 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:59:33,794 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 4
2025-08-07 15:59:38,146 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:59:38,157 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:59:38,225 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:59:38,225 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:59:38,246 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:59:38,268 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 15:59:38,271 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 15:59:38,291 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 15:59:38,294 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 15:59:38,313 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 15:59:38,317 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 15:59:38,357 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:59:39,952 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:59:39,953 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 15:59:39,953 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 15:59:39,955 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 15:59:39,956 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 15:59:39,958 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 15:59:39,974 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 15:59:39,974 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 15:59:39,975 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 15:59:39,990 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 15:59:40,007 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:28:49,005 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:28:49,016 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:28:49,025 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 2
        
2025-08-07 16:28:49,033 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:28:49,041 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 16:28:49,042 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 4
2025-08-07 16:28:52,430 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:28:52,434 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:28:52,521 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:28:52,522 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:28:52,525 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:28:52,560 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 16:28:52,564 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 16:28:52,600 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 16:28:52,603 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 16:28:52,628 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 16:28:52,632 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 16:28:52,683 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:28:56,415 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:28:56,425 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 16:28:56,425 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO courses (name, org_id)
        VALUES ('ww', 2)
        
2025-08-07 16:28:56,430 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 16:28:57,486 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 5
        
2025-08-07 16:28:57,486 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 5
2025-08-07 16:28:57,486 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:28:57,490 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:28:57,493 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 5 ORDER BY cm.ordering
2025-08-07 16:28:57,497 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 5 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:28:57,533 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 5
2025-08-07 16:28:57,534 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:28:57,534 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 5
        
2025-08-07 16:28:57,585 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 5 ORDER BY cm.ordering
2025-08-07 16:28:57,591 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 5 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:28:59,336 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 16:28:59,342 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 16:28:59,342 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('New Module', '#4a5568', 2)
2025-08-07 16:28:59,343 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 5
2025-08-07 16:28:59,343 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (5, 2, 0)
2025-08-07 16:28:59,345 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 16:36:05,883 - api.utils.logging - INFO - Logging system initialized
2025-08-07 16:38:26,197 - api.utils.logging - INFO - Logging system initialized
2025-08-07 16:43:59,015 - api.utils.logging - INFO - Logging system initialized
2025-08-07 16:44:17,596 - api.utils.logging - INFO - Logging system initialized
2025-08-07 16:44:40,813 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:44:40,822 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:44:40,877 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 5
2025-08-07 16:44:40,879 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 5
        
2025-08-07 16:44:40,879 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:44:40,882 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 5
2025-08-07 16:44:40,886 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 5
        
2025-08-07 16:44:40,887 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:44:40,902 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 5 ORDER BY cm.ordering
2025-08-07 16:44:40,907 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 5 ORDER BY cm.ordering
2025-08-07 16:44:40,908 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:44:40,923 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 5 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:44:40,937 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 5 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:55:50,016 - api.utils.logging - INFO - Logging system initialized
2025-08-07 16:56:38,704 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 2
        
2025-08-07 16:56:38,706 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:56:38,709 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:56:38,714 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:56:38,722 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 16:56:38,724 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 5
2025-08-07 16:56:38,724 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 4
2025-08-07 16:56:50,181 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:56:50,190 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:56:50,388 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 16:56:50,389 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:56:50,389 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 16:56:50,390 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:56:50,391 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 16:56:50,391 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 16:56:50,411 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 16:56:50,415 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 16:56:50,421 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 16:56:50,433 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:56:50,433 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:56:57,643 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 16:56:57,651 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 16:56:57,655 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 16:56:57,660 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 16:56:57,662 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            AND t.status = 'published' AND t.scheduled_publish_at IS NULL
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:56:57,670 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            AND t.status = 'published' AND t.scheduled_publish_at IS NULL
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 16:56:58,165 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:56:58,175 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 16:57:05,236 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 4
2025-08-07 16:57:05,237 - api.utils.logging - INFO - WebSocket connected for course_id: 4
2025-08-07 16:57:05,730 - api.utils.logging - INFO - WebSocket disconnected for course_id: 4
2025-08-07 17:01:42,830 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:01:42,838 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:01:42,840 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 2
        
2025-08-07 17:01:42,845 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:01:42,851 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 17:01:42,852 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 5
2025-08-07 17:01:42,852 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 4
2025-08-07 17:01:46,853 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:01:46,862 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:01:46,898 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:01:46,904 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:01:46,915 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:01:46,931 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 17:01:46,941 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 17:01:46,942 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 17:01:46,953 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 17:01:46,955 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 17:01:46,964 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 17:01:46,988 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:01:50,902 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:01:50,913 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:01:50,913 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO courses (name, org_id)
        VALUES ('ww', 2)
        
2025-08-07 17:01:50,917 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:01:51,428 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 6
        
2025-08-07 17:01:51,428 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:01:51,428 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 6
2025-08-07 17:01:51,430 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:01:51,439 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 6 ORDER BY cm.ordering
2025-08-07 17:01:51,447 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 6
        
2025-08-07 17:01:51,460 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 6
2025-08-07 17:01:51,462 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:01:51,463 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 6 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:01:51,478 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 6 ORDER BY cm.ordering
2025-08-07 17:01:51,482 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 6 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:02:01,962 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 6
2025-08-07 17:02:01,963 - api.utils.logging - INFO - WebSocket connected for course_id: 6
2025-08-07 17:02:02,480 - api.utils.logging - INFO - WebSocket disconnected for course_id: 6
2025-08-07 17:04:26,994 - api.utils.logging - INFO - Executing operation: SELECT * FROM users WHERE email = 'dm6840@srmist.edu.in'
2025-08-07 17:04:27,480 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:27,485 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 2
        
2025-08-07 17:04:27,492 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:27,493 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:27,503 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 17:04:27,508 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 6
2025-08-07 17:04:27,509 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 5
2025-08-07 17:04:27,510 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 4
2025-08-07 17:04:27,620 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:27,624 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:27,644 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:27,675 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:04:27,675 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:04:27,676 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:04:27,678 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:04:27,679 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:04:27,679 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:04:27,684 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:27,690 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:04:27,693 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:04:27,700 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:04:27,719 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:04:36,541 - api.utils.logging - INFO - Executing operation: SELECT * FROM users WHERE email = 'dm6840@srmist.edu.in'
2025-08-07 17:04:37,061 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:37,068 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:37,076 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 2
        
2025-08-07 17:04:37,091 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:37,096 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 17:04:37,097 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 6
2025-08-07 17:04:37,098 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 5
2025-08-07 17:04:37,098 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 4
2025-08-07 17:04:37,186 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:37,186 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:37,212 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:37,228 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:04:37,228 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:04:37,230 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:04:37,233 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:04:37,235 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:04:37,235 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:04:37,236 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:04:37,264 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:37,269 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:04:37,269 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:04:37,296 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:04:40,937 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:40,937 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:41,017 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:04:41,018 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:04:41,024 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:04:41,027 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:04:41,027 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:04:41,049 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:04:41,050 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:04:41,052 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:04:41,058 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:04:41,071 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:04:41,076 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:04:54,832 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 4
2025-08-07 17:04:54,832 - api.utils.logging - INFO - WebSocket connected for course_id: 4
2025-08-07 17:04:55,175 - api.utils.logging - INFO - WebSocket disconnected for course_id: 4
2025-08-07 17:07:04,860 - api.utils.logging - INFO - Logging system initialized
2025-08-07 17:07:29,766 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 4
2025-08-07 17:07:29,767 - api.utils.logging - INFO - WebSocket connected for course_id: 4
2025-08-07 17:07:30,479 - api.utils.logging - INFO - WebSocket disconnected for course_id: 4
2025-08-07 17:13:48,799 - api.utils.logging - INFO - Logging system initialized
2025-08-07 17:14:31,761 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:14:31,761 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('7f997752-f8fe-45e1-bd09-8bebb00802e9', 4, 'started', '{"course_description": "Test course", "intended_audience": "Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:14:31,762 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:17:33,715 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 4
2025-08-07 17:17:33,716 - api.utils.logging - INFO - WebSocket connected for course_id: 4
2025-08-07 17:17:34,122 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:17:34,122 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('c90d2b4e-839b-478c-ab63-934e5b83d251', 4, 'started', '{"course_description": "A", "intended_audience": "A", "instructions": "A", "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:17:34,122 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:18:18,631 - api.utils.logging - INFO - WebSocket disconnected for course_id: 4
2025-08-07 17:18:20,526 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:18:20,526 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:18:20,599 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:18:20,600 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:18:20,600 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:18:20,601 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:18:20,604 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:18:20,611 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:18:20,613 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:18:20,615 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:18:20,616 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:18:20,645 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:18:20,648 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:18:32,496 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 4
2025-08-07 17:18:32,497 - api.utils.logging - INFO - WebSocket connected for course_id: 4
2025-08-07 17:18:32,504 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:18:32,505 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('b00171f6-e5d2-4542-9d3d-141ac375e1db', 4, 'started', '{"course_description": "WW", "intended_audience": "WW", "instructions": "WW", "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:18:32,505 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:26:33,349 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:26:33,349 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('a10f05e6-4520-4e00-af0d-09fe0fbfba0e', 4, 'started', '{"course_description": "Test course", "intended_audience": "Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:26:33,349 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:27:03,925 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:27:03,925 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('6243cfbf-a06d-49c7-9702-bed00ecb6a4c', 4, 'started', '{"course_description": "Test course on Python basics", "intended_audience": "Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:27:03,926 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:28:03,989 - api.utils.logging - INFO - WebSocket disconnected for course_id: 4
2025-08-07 17:28:07,133 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:28:07,141 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:28:07,229 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:28:07,229 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:28:07,229 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:28:07,327 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:28:07,328 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:28:07,331 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:28:07,335 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:28:07,344 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:28:07,345 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:28:07,352 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:28:07,369 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:28:17,779 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 4
2025-08-07 17:28:17,780 - api.utils.logging - INFO - WebSocket connected for course_id: 4
2025-08-07 17:28:18,303 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:28:18,303 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('a10f1c2d-32d5-42ef-abab-ce1022866bb9', 4, 'started', '{"course_description": "w", "intended_audience": "w", "instructions": "w", "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:28:18,304 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:31:55,460 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:31:55,460 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('e1b2f04e-a77e-4d95-90bb-a1802e899b5a', 4, 'started', '{"course_description": "Python basics", "intended_audience": "Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:31:55,461 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:32:32,218 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:32:32,218 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('600e57ee-f9f8-426e-9842-48df667c7fc7', 4, 'started', '{"course_description": "Python basics", "intended_audience": "Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:32:32,218 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:32:51,964 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:32:51,964 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('2bd458f0-b06d-47d0-8d11-dac72cba361f', 4, 'started', '{"course_description": "Test Python Course", "intended_audience": "Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:32:51,964 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:34:03,396 - api.utils.logging - INFO - WebSocket disconnected for course_id: 4
2025-08-07 17:34:18,997 - api.utils.logging - INFO - Logging system initialized
2025-08-07 17:34:36,367 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:34:36,369 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:34:36,460 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:34:36,461 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:34:36,461 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:34:36,484 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:34:36,484 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:34:36,485 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:34:36,491 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:34:36,498 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:34:36,505 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:34:36,508 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:34:36,544 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:34:47,360 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 4
2025-08-07 17:34:47,362 - api.utils.logging - INFO - WebSocket connected for course_id: 4
2025-08-07 17:34:47,751 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:34:47,751 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('478ae336-1f91-4169-acba-d666e96ae2b2', 4, 'started', '{"course_description": "ww", "intended_audience": "w", "instructions": "ww", "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:34:47,752 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:34:47,770 - api.utils.logging - INFO - Starting course structure generation for course 4, job 478ae336-1f91-4169-acba-d666e96ae2b2
2025-08-07 17:34:47,771 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 17:34:48,793 - api.utils.logging - ERROR - Error in course structure generation: Error code: 401 - {'error': {'message': 'Authentication Error, Invalid proxy server token passed. Received API Key = sk-...rG4A, Key Hash (Token) =e6d5d1107ba4b3033fb97570173e542904f428e09ae40a41e0317a2c5b8c4473. Unable to find token in cache or `LiteLLM_VerificationTokenTable`', 'type': 'token_not_found_in_db', 'param': 'key', 'code': '401'}}
2025-08-07 17:34:48,817 - api.utils.logging - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\instructor\retry.py", line 252, in retry_async
    response: ChatCompletion = await func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\openai\resources\chat\completions\completions.py", line 2002, in create
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\openai\_base_client.py", line 1776, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\openinference\instrumentation\openai\_request.py", line 363, in __call__
    response = await wrapped(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\openai\_base_client.py", line 1466, in request
    return await self._request(
           ^^^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\openai\_base_client.py", line 1571, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Authentication Error, Invalid proxy server token passed. Received API Key = sk-...rG4A, Key Hash (Token) =e6d5d1107ba4b3033fb97570173e542904f428e09ae40a41e0317a2c5b8c4473. Unable to find token in cache or `LiteLLM_VerificationTokenTable`', 'type': 'token_not_found_in_db', 'param': 'key', 'code': '401'}}

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\instructor\retry.py", line 247, in retry_async
    async for attempt in max_retries:
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\tenacity\asyncio\__init__.py", line 166, in __anext__
    do = await self.iter(retry_state=self._retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\tenacity\asyncio\__init__.py", line 153, in iter
    result = await action(retry_state)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\tenacity\_utils.py", line 99, in inner
    return call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\tenacity\__init__.py", line 421, in exc_check
    raise retry_exc from fut.exception()
tenacity.RetryError: RetryError[<Future at 0x1bf6a7f11f0 state=finished raised AuthenticationError>]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\hackverge\frontend_sensAI\backend\sensai-ai\src\api\routes\ai.py", line 846, in wrapped_generate_course_structure
    await _generate_course_structure(
  File "D:\hackverge\frontend_sensAI\backend\sensai-ai\src\api\routes\ai.py", line 723, in _generate_course_structure
    async for chunk in stream:
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\instructor\client.py", line 420, in create_partial
    async for item in await self.create_fn(
                      ^^^^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\instructor\patch.py", line 161, in new_create_async
    response = await retry_async(
               ^^^^^^^^^^^^^^^^^^
  File "D:\hackverge\frontend_sensAI\backend\venv\Lib\site-packages\instructor\retry.py", line 282, in retry_async
    raise InstructorRetryException(
instructor.exceptions.InstructorRetryException: Error code: 401 - {'error': {'message': 'Authentication Error, Invalid proxy server token passed. Received API Key = sk-...rG4A, Key Hash (Token) =e6d5d1107ba4b3033fb97570173e542904f428e09ae40a41e0317a2c5b8c4473. Unable to find token in cache or `LiteLLM_VerificationTokenTable`', 'type': 'token_not_found_in_db', 'param': 'key', 'code': '401'}}

2025-08-07 17:39:41,772 - api.utils.logging - INFO - WebSocket disconnected for course_id: 4
2025-08-07 17:47:30,091 - api.utils.logging - INFO - Logging system initialized
2025-08-07 17:48:22,199 - api.utils.logging - INFO - Logging system initialized
2025-08-07 17:48:23,615 - api.utils.logging - INFO - Logging system initialized
2025-08-07 17:48:41,026 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:41,026 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('c6277b79-7af5-4f83-99c5-51794827879e', 4, 'started', '{"course_description": "Test Python Course", "intended_audience": "Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:48:41,026 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:41,037 - api.utils.logging - INFO - Starting course structure generation for course 4, job c6277b79-7af5-4f83-99c5-51794827879e
2025-08-07 17:48:41,037 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 17:48:42,745 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:42,750 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:42,750 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Introduction to Python', '#334155', 2)
2025-08-07 17:48:42,753 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 17:48:42,756 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 3, 0)
2025-08-07 17:48:42,757 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:43,841 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:43,850 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:43,850 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Python', 'draft')
2025-08-07 17:48:43,852 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:43,853 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 1, 3, 0)
2025-08-07 17:48:43,855 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:43,873 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 17:48:44,229 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:44,234 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:44,234 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Python Overview Quiz', 'draft')
2025-08-07 17:48:44,234 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:44,236 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 2, 3, 1)
2025-08-07 17:48:44,237 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:44,257 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 17:48:45,249 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:45,255 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:45,255 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Installing Python', 'draft')
2025-08-07 17:48:45,255 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:45,256 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 3, 3, 2)
2025-08-07 17:48:45,256 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:45,274 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 17:48:45,755 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:45,761 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:45,761 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Environment Setup', 'draft')
2025-08-07 17:48:45,761 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:45,762 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 4, 3, 3)
2025-08-07 17:48:45,762 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:45,779 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 17:48:46,162 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:46,167 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:46,167 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Setup Quiz', 'draft')
2025-08-07 17:48:46,167 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:46,168 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 5, 3, 4)
2025-08-07 17:48:46,168 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:46,184 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 17:48:47,182 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:47,190 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:47,191 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Python Syntax', 'draft')
2025-08-07 17:48:47,191 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:47,192 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 6, 3, 5)
2025-08-07 17:48:47,192 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:47,209 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 17:48:47,770 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:47,776 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:47,777 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Data Types in Python', 'draft')
2025-08-07 17:48:47,777 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:47,778 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 7, 3, 6)
2025-08-07 17:48:47,779 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:47,798 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 6 AND t.deleted_at IS NULL
            
2025-08-07 17:48:48,326 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:48,332 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:48,333 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Syntax and Data Types Quiz', 'draft')
2025-08-07 17:48:48,334 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:48,335 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 8, 3, 7)
2025-08-07 17:48:48,335 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:48,357 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 7 AND t.deleted_at IS NULL
            
2025-08-07 17:48:49,129 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:49,137 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:49,137 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Conditional Statements', 'draft')
2025-08-07 17:48:49,137 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:49,138 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 9, 3, 8)
2025-08-07 17:48:49,138 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:49,158 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 8 AND t.deleted_at IS NULL
            
2025-08-07 17:48:49,597 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:49,605 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:49,605 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Loops in Python', 'draft')
2025-08-07 17:48:49,605 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:49,606 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 10, 3, 9)
2025-08-07 17:48:49,606 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:49,622 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 9 AND t.deleted_at IS NULL
            
2025-08-07 17:48:50,060 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:50,069 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:50,069 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Control Structures Quiz', 'draft')
2025-08-07 17:48:50,069 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:50,070 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 11, 3, 10)
2025-08-07 17:48:50,070 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:50,086 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 10 AND t.deleted_at IS NULL
            
2025-08-07 17:48:51,163 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:51,168 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:51,168 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Defining Functions', 'draft')
2025-08-07 17:48:51,169 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:51,169 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 12, 3, 11)
2025-08-07 17:48:51,170 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:51,186 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 11 AND t.deleted_at IS NULL
            
2025-08-07 17:48:51,658 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:51,664 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:51,664 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Using Modules', 'draft')
2025-08-07 17:48:51,664 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:51,665 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 13, 3, 12)
2025-08-07 17:48:51,665 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:51,678 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 12 AND t.deleted_at IS NULL
            
2025-08-07 17:48:52,184 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:52,191 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:52,191 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Functions and Modules Quiz', 'draft')
2025-08-07 17:48:52,191 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:52,192 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 14, 3, 13)
2025-08-07 17:48:52,193 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:52,210 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 13 AND t.deleted_at IS NULL
            
2025-08-07 17:48:53,088 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:53,096 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:53,096 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Exception Handling', 'draft')
2025-08-07 17:48:53,096 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:53,096 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 15, 3, 14)
2025-08-07 17:48:53,097 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:53,114 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 14 AND t.deleted_at IS NULL
            
2025-08-07 17:48:53,435 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:53,440 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:53,440 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Error Handling Quiz', 'draft')
2025-08-07 17:48:53,441 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:53,441 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 16, 3, 15)
2025-08-07 17:48:53,442 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:53,461 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 15 AND t.deleted_at IS NULL
            
2025-08-07 17:48:54,871 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:54,878 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:54,878 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Course Summary', 'draft')
2025-08-07 17:48:54,878 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:54,879 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 17, 3, 16)
2025-08-07 17:48:54,879 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:54,893 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 16 AND t.deleted_at IS NULL
            
2025-08-07 17:48:55,700 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 17:48:55,705 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:55,705 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Capstone Project', 'draft')
2025-08-07 17:48:55,705 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 3
2025-08-07 17:48:55,706 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 18, 3, 17)
2025-08-07 17:48:55,706 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:55,719 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 3 AND ct.ordering < 17 AND t.deleted_at IS NULL
            
2025-08-07 17:48:55,852 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:48:55,853 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "Test Python Course", "intended_audience": "Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Introduction to Python", "concepts": [{"name": "What is Python?", "description": "An overview of Python as a programming language, its history, and its applications.", "tasks": [{"name": "Introduction to Python", "description": "Explain what Python is, its history, and its applications in various fields.", "type": "learning_material", "id": 1}, {"name": "Python Overview Quiz", "description": "A quiz to test understanding of what Python is and its applications.", "type": "quiz", "id": 2}]}, {"name": "Setting Up Python Environment", "description": "Instructions on how to install Python and set up the development environment.", "tasks": [{"name": "Installing Python", "description": "Guide on how to download and install Python on different operating systems.", "type": "learning_material", "id": 3}, {"name": "Environment Setup", "description": "Instructions on setting up an IDE or text editor for Python development.", "type": "learning_material", "id": 4}, {"name": "Setup Quiz", "description": "A quiz to test the knowledge of Python installation and environment setup.", "type": "quiz", "id": 5}]}, {"name": "Basic Syntax and Data Types", "description": "Introduction to Python syntax, variables, and basic data types.", "tasks": [{"name": "Python Syntax", "description": "Explain the basic syntax of Python, including indentation and comments.", "type": "learning_material", "id": 6}, {"name": "Data Types in Python", "description": "Overview of different data types in Python such as integers, floats, strings, and booleans.", "type": "learning_material", "id": 7}, {"name": "Syntax and Data Types Quiz", "description": "A quiz to test understanding of Python syntax and data types.", "type": "quiz", "id": 8}]}, {"name": "Control Structures", "description": "Understanding conditional statements and loops in Python.", "tasks": [{"name": "Conditional Statements", "description": "Explain if, elif, and else statements in Python.", "type": "learning_material", "id": 9}, {"name": "Loops in Python", "description": "Overview of for and while loops in Python.", "type": "learning_material", "id": 10}, {"name": "Control Structures Quiz", "description": "A quiz to test understanding of control structures in Python.", "type": "quiz", "id": 11}]}, {"name": "Functions and Modules", "description": "Introduction to defining and using functions and modules in Python.", "tasks": [{"name": "Defining Functions", "description": "Explain how to define and call functions in Python.", "type": "learning_material", "id": 12}, {"name": "Using Modules", "description": "Overview of how to import and use modules in Python.", "type": "learning_material", "id": 13}, {"name": "Functions and Modules Quiz", "description": "A quiz to test understanding of functions and modules in Python.", "type": "quiz", "id": 14}]}, {"name": "Error Handling", "description": "Understanding exceptions and error handling in Python.", "tasks": [{"name": "Exception Handling", "description": "Explain how to handle exceptions using try, except, and finally blocks.", "type": "learning_material", "id": 15}, {"name": "Error Handling Quiz", "description": "A quiz to test understanding of error handling in Python.", "type": "quiz", "id": 16}]}, {"name": "Conclusion and Capstone Project", "description": "Wrap up the course and introduce a capstone project to apply learned skills.", "tasks": [{"name": "Course Summary", "description": "Summarize the key concepts learned throughout the course.", "type": "learning_material", "id": 17}, {"name": "Capstone Project", "description": "A project that requires learners to apply all the concepts learned in the course to create a simple Python application.", "type": "quiz", "id": 18}]}], "id": 3}]}}' WHERE uuid = 'c6277b79-7af5-4f83-99c5-51794827879e'
2025-08-07 17:48:55,854 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:48:55,862 - api.utils.logging - INFO - Sending course_structure_completed event for course 4, job c6277b79-7af5-4f83-99c5-51794827879e
2025-08-07 17:48:55,862 - api.utils.logging - INFO - Course structure generation completed for course 4, job c6277b79-7af5-4f83-99c5-51794827879e
2025-08-07 17:49:50,824 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:50,824 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('291dad14-aebd-461f-95e9-e9e4b6cd2e81', 5, 'started', '{"course_description": "Python Programming Basics", "intended_audience": "Complete Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:49:50,825 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:50,838 - api.utils.logging - INFO - Starting course structure generation for course 5, job 291dad14-aebd-461f-95e9-e9e4b6cd2e81
2025-08-07 17:49:50,838 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 17:49:52,125 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:52,131 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:52,131 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Introduction to Python', '#312e51', 2)
2025-08-07 17:49:52,132 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 5
2025-08-07 17:49:52,132 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (5, 4, 1)
2025-08-07 17:49:52,133 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:53,246 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:53,253 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:53,253 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Python', 'draft')
2025-08-07 17:49:53,255 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:53,256 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 19, 4, 0)
2025-08-07 17:49:53,257 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:53,277 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 17:49:53,674 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:53,682 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:53,682 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Python Overview', 'draft')
2025-08-07 17:49:53,683 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:53,683 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 20, 4, 1)
2025-08-07 17:49:53,684 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:53,703 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 17:49:54,795 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:54,804 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:54,804 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Installing Python', 'draft')
2025-08-07 17:49:54,805 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:54,805 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 21, 4, 2)
2025-08-07 17:49:54,806 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:54,825 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 17:49:55,343 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:55,349 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:55,349 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Setting Up IDE', 'draft')
2025-08-07 17:49:55,350 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:55,350 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 22, 4, 3)
2025-08-07 17:49:55,351 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:55,373 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 17:49:55,810 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:55,816 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:55,816 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Environment Setup', 'draft')
2025-08-07 17:49:55,816 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:55,816 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 23, 4, 4)
2025-08-07 17:49:55,817 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:55,829 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 17:49:56,692 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:56,697 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:56,698 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Python Syntax', 'draft')
2025-08-07 17:49:56,699 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:56,701 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 24, 4, 5)
2025-08-07 17:49:56,701 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:56,718 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 17:49:57,356 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:57,361 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:57,361 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Data Types in Python', 'draft')
2025-08-07 17:49:57,361 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:57,362 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 25, 4, 6)
2025-08-07 17:49:57,362 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:57,376 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 6 AND t.deleted_at IS NULL
            
2025-08-07 17:49:57,904 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:57,910 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:57,910 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Syntax and Data Types', 'draft')
2025-08-07 17:49:57,910 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:57,911 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 26, 4, 7)
2025-08-07 17:49:57,911 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:57,927 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 7 AND t.deleted_at IS NULL
            
2025-08-07 17:49:58,925 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:58,935 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:58,936 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Conditional Statements', 'draft')
2025-08-07 17:49:58,936 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:58,937 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 27, 4, 8)
2025-08-07 17:49:58,937 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:58,951 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 8 AND t.deleted_at IS NULL
            
2025-08-07 17:49:59,400 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:59,408 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:59,408 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Loops in Python', 'draft')
2025-08-07 17:49:59,409 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:59,410 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 28, 4, 9)
2025-08-07 17:49:59,410 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:59,429 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 9 AND t.deleted_at IS NULL
            
2025-08-07 17:49:59,764 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:49:59,771 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:49:59,771 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Control Structures', 'draft')
2025-08-07 17:49:59,771 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:49:59,772 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 29, 4, 10)
2025-08-07 17:49:59,772 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:49:59,789 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 10 AND t.deleted_at IS NULL
            
2025-08-07 17:50:00,672 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:00,677 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:00,677 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Defining Functions', 'draft')
2025-08-07 17:50:00,678 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:50:00,679 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 30, 4, 11)
2025-08-07 17:50:00,679 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:00,697 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 11 AND t.deleted_at IS NULL
            
2025-08-07 17:50:01,271 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:01,272 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:01,273 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('5d0da100-008f-4280-b04c-ba0dbf66a7b5', 6, 'started', '{"course_description": "Test course", "intended_audience": "Test", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 17:50:01,274 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:01,283 - api.utils.logging - INFO - Starting course structure generation for course 6, job 5d0da100-008f-4280-b04c-ba0dbf66a7b5
2025-08-07 17:50:01,284 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 17:50:01,710 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:01,710 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Using Modules', 'draft')
2025-08-07 17:50:01,711 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:50:01,711 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 31, 4, 12)
2025-08-07 17:50:01,713 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:01,736 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 12 AND t.deleted_at IS NULL
            
2025-08-07 17:50:01,771 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:01,777 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:01,777 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Functions and Modules', 'draft')
2025-08-07 17:50:01,778 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:50:01,780 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 32, 4, 13)
2025-08-07 17:50:01,782 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:01,805 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 13 AND t.deleted_at IS NULL
            
2025-08-07 17:50:02,472 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:02,476 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:02,477 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Common Errors in Python', 'draft')
2025-08-07 17:50:02,482 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:50:02,483 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 33, 4, 14)
2025-08-07 17:50:02,483 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:02,504 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 14 AND t.deleted_at IS NULL
            
2025-08-07 17:50:02,765 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:02,772 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:02,772 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Introduction to the Course', '#553c2d', 2)
2025-08-07 17:50:02,773 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 6
2025-08-07 17:50:02,773 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (6, 5, 0)
2025-08-07 17:50:02,773 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:02,966 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:02,975 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:02,975 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Debugging Techniques', 'draft')
2025-08-07 17:50:02,975 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:50:02,975 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 34, 4, 15)
2025-08-07 17:50:02,975 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:02,995 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 15 AND t.deleted_at IS NULL
            
2025-08-07 17:50:03,369 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:03,375 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:03,375 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Error Handling', 'draft')
2025-08-07 17:50:03,376 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 4
2025-08-07 17:50:03,376 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 35, 4, 16)
2025-08-07 17:50:03,377 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:03,394 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 4 AND ct.ordering < 16 AND t.deleted_at IS NULL
            
2025-08-07 17:50:03,644 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:03,652 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:03,652 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Conclusion and Capstone Project', '#553c2d', 2)
2025-08-07 17:50:03,653 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 5
2025-08-07 17:50:03,653 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (5, 6, 2)
2025-08-07 17:50:03,653 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:03,929 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:03,934 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:03,934 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Course Objectives', 'draft')
2025-08-07 17:50:03,934 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 5
2025-08-07 17:50:03,935 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 36, 5, 0)
2025-08-07 17:50:03,935 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:03,951 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 5 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 17:50:04,368 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:04,373 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:04,374 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Course Structure Overview', 'draft')
2025-08-07 17:50:04,375 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 5
2025-08-07 17:50:04,376 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 37, 5, 1)
2025-08-07 17:50:04,376 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:04,393 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 5 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 17:50:04,960 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:04,968 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:04,970 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Review of Key Concepts', 'draft')
2025-08-07 17:50:04,970 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 6
2025-08-07 17:50:04,971 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 38, 6, 0)
2025-08-07 17:50:04,971 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:04,990 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 6 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 17:50:05,011 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:05,016 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:05,016 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Expectations and Requirements', 'draft')
2025-08-07 17:50:05,016 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 5
2025-08-07 17:50:05,017 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 39, 5, 2)
2025-08-07 17:50:05,017 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:05,030 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 5 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 17:50:05,654 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 17:50:05,661 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:05,661 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Capstone Project', 'draft')
2025-08-07 17:50:05,661 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 6
2025-08-07 17:50:05,662 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 40, 6, 1)
2025-08-07 17:50:05,662 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:05,679 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 6 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 17:50:05,836 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:05,837 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "Python Programming Basics", "intended_audience": "Complete Beginners", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Introduction to Python", "concepts": [{"name": "What is Python?", "description": "An overview of Python as a programming language, its history, and its applications.", "tasks": [{"name": "Introduction to Python", "description": "Explain what Python is, its history, and its applications in various fields.", "type": "learning_material", "id": 19}, {"name": "Quiz on Python Overview", "description": "Test understanding of Python''s history and applications.", "type": "quiz", "id": 20}]}, {"name": "Setting Up Python Environment", "description": "Guide on how to install Python and set up the development environment.", "tasks": [{"name": "Installing Python", "description": "Step-by-step instructions on how to download and install Python on different operating systems.", "type": "learning_material", "id": 21}, {"name": "Setting Up IDE", "description": "Instructions on how to set up an Integrated Development Environment (IDE) for Python programming.", "type": "learning_material", "id": 22}, {"name": "Quiz on Environment Setup", "description": "Test understanding of the installation and setup process.", "type": "quiz", "id": 23}]}, {"name": "Basic Syntax and Data Types", "description": "Introduction to Python syntax, variables, and basic data types.", "tasks": [{"name": "Python Syntax", "description": "Explain the basic syntax of Python, including indentation and comments.", "type": "learning_material", "id": 24}, {"name": "Data Types in Python", "description": "Overview of different data types in Python such as integers, floats, strings, and booleans.", "type": "learning_material", "id": 25}, {"name": "Quiz on Syntax and Data Types", "description": "Test understanding of Python syntax and data types.", "type": "quiz", "id": 26}]}, {"name": "Control Structures", "description": "Understanding conditional statements and loops in Python.", "tasks": [{"name": "Conditional Statements", "description": "Explain how to use if, elif, and else statements in Python.", "type": "learning_material", "id": 27}, {"name": "Loops in Python", "description": "Overview of for and while loops, including how to use them effectively.", "type": "learning_material", "id": 28}, {"name": "Quiz on Control Structures", "description": "Test understanding of conditional statements and loops.", "type": "quiz", "id": 29}]}, {"name": "Functions and Modules", "description": "Introduction to defining and using functions and modules in Python.", "tasks": [{"name": "Defining Functions", "description": "Explain how to define and call functions in Python, including parameters and return values.", "type": "learning_material", "id": 30}, {"name": "Using Modules", "description": "Overview of how to import and use modules in Python.", "type": "learning_material", "id": 31}, {"name": "Quiz on Functions and Modules", "description": "Test understanding of functions and modules in Python.", "type": "quiz", "id": 32}]}, {"name": "Error Handling and Debugging", "description": "Understanding common errors in Python and how to handle them.", "tasks": [{"name": "Common Errors in Python", "description": "Discuss common syntax and runtime errors in Python and how to troubleshoot them.", "type": "learning_material", "id": 33}, {"name": "Debugging Techniques", "description": "Overview of debugging techniques and tools available in Python.", "type": "learning_material", "id": 34}, {"name": "Quiz on Error Handling", "description": "Test understanding of error handling and debugging techniques.", "type": "quiz", "id": 35}]}], "id": 4}, {"name": "Conclusion and Capstone Project", "concepts": [{"name": "Course Summary", "description": "A summary of the key concepts learned throughout the course.", "tasks": [{"name": "Review of Key Concepts", "description": "Summarize the main topics covered in the course, including Python basics, control structures, functions, and error handling.", "type": "learning_material", "id": 38}, {"name": "Capstone Project", "description": "A project that requires learners to apply all the concepts learned in the course to create a simple Python program.", "type": "quiz", "id": 40}]}], "id": 6}]}}' WHERE uuid = '291dad14-aebd-461f-95e9-e9e4b6cd2e81'
2025-08-07 17:50:05,837 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:05,847 - api.utils.logging - INFO - Sending course_structure_completed event for course 5, job 291dad14-aebd-461f-95e9-e9e4b6cd2e81
2025-08-07 17:50:05,847 - api.utils.logging - INFO - Course structure generation completed for course 5, job 291dad14-aebd-461f-95e9-e9e4b6cd2e81
2025-08-07 17:50:06,113 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:06,121 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:06,121 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Defining the Target Audience', 'draft')
2025-08-07 17:50:06,122 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 5
2025-08-07 17:50:06,122 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 41, 5, 3)
2025-08-07 17:50:06,123 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:06,139 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 5 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 17:50:06,618 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:06,626 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:06,626 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Audience Needs Assessment', 'draft')
2025-08-07 17:50:06,626 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 5
2025-08-07 17:50:06,627 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 42, 5, 4)
2025-08-07 17:50:06,627 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:06,640 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 5 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 17:50:07,008 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:07,014 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:07,014 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Audience Understanding', 'draft')
2025-08-07 17:50:07,015 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 5
2025-08-07 17:50:07,015 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 43, 5, 5)
2025-08-07 17:50:07,016 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:07,035 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 5 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 17:50:07,273 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:07,278 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:07,279 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Core Concepts of the Course', '#312e51', 2)
2025-08-07 17:50:07,279 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 6
2025-08-07 17:50:07,280 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (6, 7, 1)
2025-08-07 17:50:07,280 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:08,371 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:08,376 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:08,377 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of Key Concepts', 'draft')
2025-08-07 17:50:08,377 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 7
2025-08-07 17:50:08,378 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 44, 7, 0)
2025-08-07 17:50:08,378 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:08,393 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 7 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 17:50:08,890 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:08,896 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:08,896 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Key Concepts', 'draft')
2025-08-07 17:50:08,897 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 7
2025-08-07 17:50:08,897 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 45, 7, 1)
2025-08-07 17:50:08,897 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:08,911 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 7 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 17:50:09,760 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:09,765 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:09,765 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Real-World Applications', 'draft')
2025-08-07 17:50:09,765 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 7
2025-08-07 17:50:09,766 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 46, 7, 2)
2025-08-07 17:50:09,766 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:09,781 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 7 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 17:50:10,222 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:10,231 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:10,231 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Case Studies', 'draft')
2025-08-07 17:50:10,231 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 7
2025-08-07 17:50:10,232 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 47, 7, 3)
2025-08-07 17:50:10,232 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:10,251 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 7 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 17:50:10,784 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:10,788 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:10,788 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Practical Applications', 'draft')
2025-08-07 17:50:10,788 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 7
2025-08-07 17:50:10,789 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 48, 7, 4)
2025-08-07 17:50:10,789 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:10,804 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 7 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 17:50:11,116 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:11,122 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:11,122 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Conclusion and Capstone Project', '#2d3748', 2)
2025-08-07 17:50:11,123 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 6
2025-08-07 17:50:11,123 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (6, 8, 2)
2025-08-07 17:50:11,124 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:12,052 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:12,056 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:12,056 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Recap of Key Learnings', 'draft')
2025-08-07 17:50:12,056 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 8
2025-08-07 17:50:12,057 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 49, 8, 0)
2025-08-07 17:50:12,057 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:12,074 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 8 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 17:50:13,011 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:13,018 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:13,019 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Guidelines', 'draft')
2025-08-07 17:50:13,019 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 8
2025-08-07 17:50:13,019 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 50, 8, 1)
2025-08-07 17:50:13,020 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:13,039 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 8 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 17:50:13,488 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 17:50:13,496 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:13,496 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Submission', 'draft')
2025-08-07 17:50:13,496 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 8
2025-08-07 17:50:13,496 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 51, 8, 2)
2025-08-07 17:50:13,496 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:13,513 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 8 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 17:50:13,620 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:50:13,620 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "Test course", "intended_audience": "Test", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Introduction to the Course", "concepts": [{"name": "Course Overview", "description": "An introduction to the course objectives, structure, and what learners can expect to gain from it.", "tasks": [{"name": "Introduction to Course Objectives", "description": "Explain the goals of the course and what learners will achieve by the end.", "type": "learning_material", "id": 36}, {"name": "Course Structure Overview", "description": "Provide a breakdown of the course modules and their contents.", "type": "learning_material", "id": 37}, {"name": "Expectations and Requirements", "description": "Outline any prerequisites or expectations for learners before starting the course.", "type": "learning_material", "id": 39}]}, {"name": "Understanding the Audience", "description": "Identify the target audience for the course and their needs.", "tasks": [{"name": "Defining the Target Audience", "description": "Discuss who the intended audience is and why they are relevant to the course.", "type": "learning_material", "id": 41}, {"name": "Audience Needs Assessment", "description": "Explore the needs and challenges faced by the target audience.", "type": "learning_material", "id": 42}, {"name": "Quiz on Audience Understanding", "description": "A quiz to assess understanding of the target audience and their needs.", "type": "quiz", "id": 43}]}], "id": 5}, {"name": "Core Concepts of the Course", "concepts": [{"name": "Key Concepts", "description": "Introduce the fundamental concepts that will be covered in the course.", "tasks": [{"name": "Overview of Key Concepts", "description": "Provide a detailed explanation of the key concepts that will be explored throughout the course.", "type": "learning_material", "id": 44}, {"name": "Quiz on Key Concepts", "description": "A quiz to test understanding of the key concepts introduced.", "type": "quiz", "id": 45}]}, {"name": "Practical Applications", "description": "Discuss how the concepts can be applied in real-world scenarios.", "tasks": [{"name": "Real-World Applications", "description": "Explain how the concepts can be utilized in practical situations.", "type": "learning_material", "id": 46}, {"name": "Case Studies", "description": "Provide examples of case studies where these concepts have been applied successfully.", "type": "learning_material", "id": 47}, {"name": "Quiz on Practical Applications", "description": "A quiz to assess understanding of how to apply the concepts in real-world scenarios.", "type": "quiz", "id": 48}]}], "id": 7}, {"name": "Conclusion and Capstone Project", "concepts": [{"name": "Course Summary", "description": "Summarize the key points covered in the course and their importance.", "tasks": [{"name": "Recap of Key Learnings", "description": "Highlight the main takeaways from each module and concept.", "type": "learning_material", "id": 49}]}, {"name": "Capstone Project", "description": "A final project that requires learners to apply everything they have learned in the course.", "tasks": [{"name": "Capstone Project Guidelines", "description": "Provide instructions and expectations for the capstone project.", "type": "learning_material", "id": 50}, {"name": "Capstone Project Submission", "description": "Outline the process for submitting the capstone project for evaluation.", "type": "learning_material", "id": 51}]}], "id": 8}]}}' WHERE uuid = '5d0da100-008f-4280-b04c-ba0dbf66a7b5'
2025-08-07 17:50:13,621 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 17:50:13,631 - api.utils.logging - INFO - Sending course_structure_completed event for course 6, job 5d0da100-008f-4280-b04c-ba0dbf66a7b5
2025-08-07 17:50:13,631 - api.utils.logging - INFO - Course structure generation completed for course 6, job 5d0da100-008f-4280-b04c-ba0dbf66a7b5
2025-08-07 17:50:33,176 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:50:33,179 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:50:33,377 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:50:33,377 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:50:33,478 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:50:33,478 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 17:50:33,479 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 17:50:33,521 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 17:50:33,606 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:50:33,617 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 17:50:33,624 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 17:50:33,651 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:50:33,722 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 17:52:39,150 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 17:52:39,150 - api.utils.logging - INFO - Executing operation: DELETE FROM milestones WHERE id = 3
2025-08-07 17:52:39,150 - api.utils.logging - INFO - Executing operation: UPDATE course_tasks SET milestone_id = NULL WHERE milestone_id = 3
2025-08-07 17:52:39,151 - api.utils.logging - INFO - Executing operation: DELETE FROM course_milestones WHERE milestone_id = 3
2025-08-07 17:52:39,151 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:00,036 - api.utils.logging - INFO - Logging system initialized
2025-08-07 18:02:09,924 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": true,
  "reason": "Safe for educational content generation."
}
2025-08-07 18:02:17,590 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": false,
  "reason": "The request asks for instructions on creating a dangerous item, which violates the 'Dangerous and Illegal Acts' policy."
}
2025-08-07 18:02:27,072 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": false,
  "reason": "The request promotes the creation of dangerous items, which violates the 'Dangerous and Illegal Acts' policy."
}
2025-08-07 18:02:27,073 - api.utils.logging - WARNING - Unsafe course generation request blocked: The request promotes the creation of dangerous items, which violates the 'Dangerous and Illegal Acts' policy.
2025-08-07 18:02:35,420 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": true,
  "reason": "Safe for educational content generation."
}
2025-08-07 18:02:35,420 - api.utils.logging - INFO - Course generation request passed safety check: Safe for educational content generation.
2025-08-07 18:02:35,603 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:35,603 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('3799ad82-d36f-473e-ae8a-522be9356553', 4, 'started', '{"course_description": "Introduction to Python Programming", "intended_audience": "High school students", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 18:02:35,604 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:35,614 - api.utils.logging - INFO - Starting course structure generation for course 4, job 3799ad82-d36f-473e-ae8a-522be9356553
2025-08-07 18:02:35,614 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 18:02:37,166 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:37,204 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:37,204 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 1: Getting Started with Python', '#312e51', 2)
2025-08-07 18:02:37,206 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:02:37,206 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 9, 0)
2025-08-07 18:02:37,207 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:38,052 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:38,057 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:38,058 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'What is Python?', 'draft')
2025-08-07 18:02:38,058 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 9
2025-08-07 18:02:38,059 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 52, 9, 0)
2025-08-07 18:02:38,059 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:38,072 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 9 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:02:38,308 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:38,315 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:38,315 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Python History Quiz', 'draft')
2025-08-07 18:02:38,317 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 9
2025-08-07 18:02:38,318 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 53, 9, 1)
2025-08-07 18:02:38,318 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:38,337 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 9 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:02:39,169 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:39,175 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:39,175 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Installing Python', 'draft')
2025-08-07 18:02:39,175 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 9
2025-08-07 18:02:39,176 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 54, 9, 2)
2025-08-07 18:02:39,176 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:39,192 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 9 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:02:39,537 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:39,543 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:39,543 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Environment Setup Quiz', 'draft')
2025-08-07 18:02:39,544 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 9
2025-08-07 18:02:39,546 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 55, 9, 3)
2025-08-07 18:02:39,546 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:39,562 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 9 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:02:40,495 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:40,500 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:40,500 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Hello World Program', 'draft')
2025-08-07 18:02:40,500 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 9
2025-08-07 18:02:40,501 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 56, 9, 4)
2025-08-07 18:02:40,501 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:40,516 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 9 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:02:41,242 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:41,248 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:41,248 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'First Program Quiz', 'draft')
2025-08-07 18:02:41,249 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 9
2025-08-07 18:02:41,251 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 57, 9, 5)
2025-08-07 18:02:41,252 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:41,274 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 9 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:02:42,200 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:42,207 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:42,207 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 2: Basic Python Syntax and Data Types', '#553c2d', 2)
2025-08-07 18:02:42,207 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:02:42,208 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 10, 1)
2025-08-07 18:02:42,209 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:44,003 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": false,
  "reason": "The request promotes negative social behavior that could be considered harassment, which is inappropriate for an educational setting."
}
2025-08-07 18:02:44,026 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:44,035 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:44,035 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Python Syntax', 'draft')
2025-08-07 18:02:44,035 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 10
2025-08-07 18:02:44,036 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 58, 10, 0)
2025-08-07 18:02:44,036 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:44,056 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 10 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:02:44,429 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:44,435 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:44,435 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Syntax Quiz', 'draft')
2025-08-07 18:02:44,436 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 10
2025-08-07 18:02:44,436 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 59, 10, 1)
2025-08-07 18:02:44,436 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:44,453 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 10 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:02:45,557 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:45,565 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:45,565 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Data Types', 'draft')
2025-08-07 18:02:45,566 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 10
2025-08-07 18:02:45,566 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 60, 10, 2)
2025-08-07 18:02:45,567 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:45,585 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 10 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:02:46,044 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:46,052 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:46,052 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Data Types Quiz', 'draft')
2025-08-07 18:02:46,053 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 10
2025-08-07 18:02:46,053 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 61, 10, 3)
2025-08-07 18:02:46,054 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:46,069 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 10 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:02:46,255 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:46,260 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:46,260 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 3: Control Structures in Python', '#364135', 2)
2025-08-07 18:02:46,261 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:02:46,261 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 11, 2)
2025-08-07 18:02:46,261 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:47,064 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:47,072 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:47,073 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Conditional Statements', 'draft')
2025-08-07 18:02:47,073 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 11
2025-08-07 18:02:47,074 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 62, 11, 0)
2025-08-07 18:02:47,074 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:47,092 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 11 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:02:47,383 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:47,389 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:47,389 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Conditional Statements Quiz', 'draft')
2025-08-07 18:02:47,390 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 11
2025-08-07 18:02:47,390 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 63, 11, 1)
2025-08-07 18:02:47,391 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:47,404 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 11 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:02:48,090 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:48,096 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:48,097 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Loops', 'draft')
2025-08-07 18:02:48,097 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 11
2025-08-07 18:02:48,098 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 64, 11, 2)
2025-08-07 18:02:48,098 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:48,118 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 11 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:02:48,531 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:48,535 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:48,535 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Loops Quiz', 'draft')
2025-08-07 18:02:48,535 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 11
2025-08-07 18:02:48,536 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 65, 11, 3)
2025-08-07 18:02:48,537 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:48,557 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 11 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:02:48,826 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:48,833 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:48,833 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 4: Functions and Modules', '#2d3748', 2)
2025-08-07 18:02:48,833 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:02:48,833 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 12, 3)
2025-08-07 18:02:48,834 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:49,542 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:49,584 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:49,585 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Creating Functions', 'draft')
2025-08-07 18:02:49,585 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 12
2025-08-07 18:02:49,586 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 66, 12, 0)
2025-08-07 18:02:49,586 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:49,655 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 12 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:02:49,745 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:49,749 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:49,750 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Functions Quiz', 'draft')
2025-08-07 18:02:49,750 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 12
2025-08-07 18:02:49,750 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 67, 12, 1)
2025-08-07 18:02:49,750 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:49,766 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 12 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:02:51,197 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:51,205 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:51,205 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Modules', 'draft')
2025-08-07 18:02:51,205 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 12
2025-08-07 18:02:51,206 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 68, 12, 2)
2025-08-07 18:02:51,207 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:51,224 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 12 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:02:51,796 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:51,804 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:51,804 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Modules Quiz', 'draft')
2025-08-07 18:02:51,805 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 12
2025-08-07 18:02:51,805 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 69, 12, 3)
2025-08-07 18:02:51,806 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:51,823 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 12 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:02:52,082 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:52,088 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:52,088 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 5: Conclusion and Capstone Project', '#433c4c', 2)
2025-08-07 18:02:52,088 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:02:52,089 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 13, 4)
2025-08-07 18:02:52,089 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:53,030 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:53,041 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:53,041 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Summary of Key Concepts', 'draft')
2025-08-07 18:02:53,042 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 13
2025-08-07 18:02:53,043 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 70, 13, 0)
2025-08-07 18:02:53,043 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:53,066 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 13 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:02:54,123 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:02:54,131 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:54,131 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Guidelines', 'draft')
2025-08-07 18:02:54,131 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 13
2025-08-07 18:02:54,131 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 71, 13, 1)
2025-08-07 18:02:54,132 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:54,144 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 13 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:02:54,246 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:02:54,246 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "Introduction to Python Programming", "intended_audience": "High school students", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Module 1: Getting Started with Python", "concepts": [{"name": "Concept 1: Introduction to Python", "description": "This concept covers what Python is, its history, and its applications in various fields.", "tasks": [{"name": "What is Python?", "description": "Explain what Python is and its significance in programming.", "type": "learning_material", "id": 52}, {"name": "Python History Quiz", "description": "Test your knowledge about the history and significance of Python.", "type": "quiz", "id": 53}]}, {"name": "Concept 2: Setting Up the Python Environment", "description": "This concept guides students through the installation of Python and setting up their development environment.", "tasks": [{"name": "Installing Python", "description": "Provide a step-by-step guide on how to install Python on different operating systems.", "type": "learning_material", "id": 54}, {"name": "Environment Setup Quiz", "description": "Assess your understanding of the installation and setup process for Python.", "type": "quiz", "id": 55}]}, {"name": "Concept 3: Writing Your First Python Program", "description": "Students will learn how to write and execute their first simple Python program.", "tasks": [{"name": "Hello World Program", "description": "Guide students through writing and executing their first ''Hello, World!'' program in Python.", "type": "learning_material", "id": 56}, {"name": "First Program Quiz", "description": "Challenge students to write their own ''Hello, World!'' program and understand its components.", "type": "quiz", "id": 57}]}], "id": 9}, {"name": "Module 2: Basic Python Syntax and Data Types", "concepts": [{"name": "Concept 1: Python Syntax Basics", "description": "This concept introduces the basic syntax rules of Python programming.", "tasks": [{"name": "Understanding Python Syntax", "description": "Explain the basic syntax rules in Python, including indentation and comments.", "type": "learning_material", "id": 58}, {"name": "Syntax Quiz", "description": "Test your understanding of Python syntax rules with practical examples.", "type": "quiz", "id": 59}]}, {"name": "Concept 2: Data Types in Python", "description": "Students will learn about different data types available in Python, such as integers, floats, strings, and booleans.", "tasks": [{"name": "Introduction to Data Types", "description": "Describe the various data types in Python and their uses.", "type": "learning_material", "id": 60}, {"name": "Data Types Quiz", "description": "Assess your knowledge of Python data types with practical exercises.", "type": "quiz", "id": 61}]}], "id": 10}, {"name": "Module 3: Control Structures in Python", "concepts": [{"name": "Concept 1: Conditional Statements", "description": "This concept covers how to use if, elif, and else statements in Python.", "tasks": [{"name": "Understanding Conditional Statements", "description": "Explain how conditional statements work in Python with examples.", "type": "learning_material", "id": 62}, {"name": "Conditional Statements Quiz", "description": "Practice writing conditional statements based on given scenarios.", "type": "quiz", "id": 63}]}, {"name": "Concept 2: Loops in Python", "description": "Students will learn about for loops and while loops in Python.", "tasks": [{"name": "Introduction to Loops", "description": "Describe the different types of loops in Python and their applications.", "type": "learning_material", "id": 64}, {"name": "Loops Quiz", "description": "Challenge students to write loops based on practical problems.", "type": "quiz", "id": 65}]}], "id": 11}, {"name": "Module 4: Functions and Modules", "concepts": [{"name": "Concept 1: Defining Functions", "description": "This concept teaches how to define and call functions in Python.", "tasks": [{"name": "Creating Functions", "description": "Explain how to create and use functions in Python with examples.", "type": "learning_material", "id": 66}, {"name": "Functions Quiz", "description": "Test your understanding of functions by creating and calling them in different scenarios.", "type": "quiz", "id": 67}]}, {"name": "Concept 2: Using Modules", "description": "Students will learn how to import and use modules in Python.", "tasks": [{"name": "Introduction to Modules", "description": "Describe what modules are and how to use them in Python programs.", "type": "learning_material", "id": 68}, {"name": "Modules Quiz", "description": "Assess your knowledge of modules by solving practical problems involving module usage.", "type": "quiz", "id": 69}]}], "id": 12}, {"name": "Module 5: Conclusion and Capstone Project", "concepts": [{"name": "Concept 1: Course Summary", "description": "A recap of all the concepts learned throughout the course.", "tasks": [{"name": "Summary of Key Concepts", "description": "Summarize the key concepts covered in the course and their importance.", "type": "learning_material", "id": 70}]}, {"name": "Concept 2: Capstone Project", "description": "An opportunity for students to apply everything they have learned in a comprehensive project.", "tasks": [{"name": "Capstone Project Guidelines", "description": "Provide guidelines for the capstone project where students will create a Python program that incorporates various concepts learned in the course.", "type": "learning_material", "id": 71}]}], "id": 13}]}}' WHERE uuid = '3799ad82-d36f-473e-ae8a-522be9356553'
2025-08-07 18:02:54,246 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:02:54,255 - api.utils.logging - INFO - Sending course_structure_completed event for course 4, job 3799ad82-d36f-473e-ae8a-522be9356553
2025-08-07 18:02:54,255 - api.utils.logging - INFO - Course structure generation completed for course 4, job 3799ad82-d36f-473e-ae8a-522be9356553
2025-08-07 18:06:08,965 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 18:06:08,965 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 4
        
2025-08-07 18:06:08,973 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:06:08,980 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 4
2025-08-07 18:06:08,987 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 4 ORDER BY cm.ordering
2025-08-07 18:06:08,997 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 4 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 18:10:35,904 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:10:35,910 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:10:35,910 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('New Module', '#433c4c', 2)
2025-08-07 18:10:35,910 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:10:35,911 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 14, 5)
2025-08-07 18:10:35,911 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:10:38,249 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:10:38,253 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:10:38,253 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'New learning material', 'draft')
2025-08-07 18:10:38,254 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 14
2025-08-07 18:10:38,255 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 72, 14, 0)
2025-08-07 18:10:38,256 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:10:38,268 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 14 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:10:38,611 - api.utils.logging - INFO - Executing operation: 
        SELECT id, title, type, status, org_id, scheduled_publish_at
        FROM tasks
        WHERE id = 72 AND deleted_at IS NULL
        
2025-08-07 18:10:38,616 - api.utils.logging - INFO - Executing operation: SELECT blocks FROM tasks WHERE id = 72
2025-08-07 18:10:40,923 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:10:40,930 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name, uc.role, o.id, o.name
        FROM cohorts c
        JOIN user_cohorts uc ON uc.cohort_id = c.id
        JOIN organizations o ON o.id = c.org_id
        WHERE uc.user_id = 2
        
2025-08-07 18:10:40,931 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:10:40,934 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:10:40,937 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 18:10:40,938 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 6
2025-08-07 18:10:40,938 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 5
2025-08-07 18:10:40,939 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, o.id, o.name, o.slug FROM courses c JOIN organizations o ON c.org_id = o.id WHERE c.id = 4
2025-08-07 18:10:43,677 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:10:43,685 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:10:43,712 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 18:10:43,716 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:10:43,751 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 18:10:43,752 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 18:10:43,773 - api.utils.logging - INFO - Executing operation: SELECT uo.user_id, u.email, uo.role 
        FROM user_organizations uo
        JOIN users u ON uo.user_id = u.id 
        WHERE uo.org_id = 2
2025-08-07 18:10:43,779 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 18:10:43,795 - api.utils.logging - INFO - Executing operation: 
        SELECT c.id, c.name
        FROM cohorts c
        WHERE c.org_id = 2
        ORDER BY c.id DESC
        
2025-08-07 18:10:43,800 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 18:10:43,816 - api.utils.logging - INFO - Executing operation: SELECT id, name FROM courses WHERE org_id = 2 ORDER BY id DESC
2025-08-07 18:10:43,844 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:10:49,341 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 18:10:49,348 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:10:49,349 - api.utils.logging - INFO - Executing operation: 
        INSERT INTO courses (name, org_id)
        VALUES ('bomb', 2)
        
2025-08-07 18:10:49,350 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:10:49,753 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 7
2025-08-07 18:10:49,754 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 7
        
2025-08-07 18:10:49,755 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 18:10:49,755 - api.utils.logging - INFO - Executing operation: SELECT uo.org_id, o.name, uo.role, o.openai_api_key, o.openai_free_trial
        FROM user_organizations uo
        JOIN organizations o ON uo.org_id = o.id 
        WHERE uo.user_id = 2 ORDER BY uo.id DESC
2025-08-07 18:10:49,765 - api.utils.logging - INFO - Executing operation: 
        SELECT ch.id, ch.name, cc.is_drip_enabled, cc.frequency_value, cc.frequency_unit, cc.publish_at
        FROM cohorts ch
        JOIN course_cohorts cc ON ch.id = cc.cohort_id
        WHERE cc.course_id = 7
        
2025-08-07 18:10:49,766 - api.utils.logging - INFO - Executing operation: SELECT * FROM organizations WHERE id = 2
2025-08-07 18:10:49,767 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 7 ORDER BY cm.ordering
2025-08-07 18:10:49,775 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 7 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 18:10:49,786 - api.utils.logging - INFO - Executing operation: SELECT c.id, c.name, cgj.status as course_generation_status FROM courses c LEFT JOIN course_generation_jobs cgj ON c.id = cgj.course_id WHERE c.id = 7
2025-08-07 18:10:49,795 - api.utils.logging - INFO - Executing operation: SELECT m.id, m.name, m.color, cm.ordering 
            FROM course_milestones cm
            JOIN milestones m ON cm.milestone_id = m.id
            WHERE cm.course_id = 7 ORDER BY cm.ordering
2025-08-07 18:10:49,805 - api.utils.logging - INFO - Executing operation: SELECT t.id, t.title, t.type, t.status, t.scheduled_publish_at, ct.milestone_id, ct.ordering,
            (CASE WHEN t.type = 'quiz' THEN 
                (SELECT COUNT(*) FROM questions q 
                 WHERE q.task_id = t.id)
             ELSE NULL END) as num_questions,
            tgj.status as task_generation_status
            FROM course_tasks ct
            JOIN tasks t ON ct.task_id = t.id
            LEFT JOIN task_generation_jobs tgj ON t.id = tgj.task_id
            WHERE ct.course_id = 7 AND t.deleted_at IS NULL
            
            ORDER BY ct.milestone_id, ct.ordering
2025-08-07 18:11:44,011 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 7
2025-08-07 18:11:44,013 - api.utils.logging - INFO - WebSocket connected for course_id: 7
2025-08-07 18:11:46,046 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": false,
  "reason": "The request asks for instructions on creating a dangerous item, which violates the 'Dangerous and Illegal Acts' policy."
}
2025-08-07 18:11:46,047 - api.utils.logging - WARNING - Unsafe course generation request blocked: The request asks for instructions on creating a dangerous item, which violates the 'Dangerous and Illegal Acts' policy.
2025-08-07 18:11:46,181 - api.utils.logging - INFO - WebSocket disconnected for course_id: 7
2025-08-07 18:12:20,974 - api.utils.logging - INFO - Attempting WebSocket connection for course_id: 7
2025-08-07 18:12:20,990 - api.utils.logging - INFO - WebSocket connected for course_id: 7
2025-08-07 18:12:22,330 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": false,
  "reason": "The request lacks educational relevance and appears to be intended for a casual or disruptive context, which is inappropriate for an educational setting."
}
2025-08-07 18:12:22,331 - api.utils.logging - WARNING - Unsafe course generation request blocked: The request lacks educational relevance and appears to be intended for a casual or disruptive context, which is inappropriate for an educational setting.
2025-08-07 18:12:22,351 - api.utils.logging - INFO - WebSocket disconnected for course_id: 7
2025-08-07 18:29:18,151 - api.utils.logging - INFO - Logging system initialized
2025-08-07 18:30:05,295 - api.utils.logging - INFO - Content bypassed safety check - obviously educational: Introduction to Python programming for beginners...
2025-08-07 18:30:13,189 - api.utils.logging - INFO - Content bypassed safety check - obviously educational: Course Description: Introduction to Python program...
2025-08-07 18:30:13,189 - api.utils.logging - INFO - Course generation request passed safety check: Safe for educational content generation.
2025-08-07 18:30:13,398 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:13,398 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('08616828-4d33-49c2-befb-cc3757b1475b', 4, 'started', '{"course_description": "Introduction to Python programming for beginners", "intended_audience": "High school students", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 18:30:13,399 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:13,409 - api.utils.logging - INFO - Starting course structure generation for course 4, job 08616828-4d33-49c2-befb-cc3757b1475b
2025-08-07 18:30:13,409 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 18:30:14,950 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:14,955 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:14,955 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 1: Introduction to Python', '#2d3748', 2)
2025-08-07 18:30:14,956 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:30:14,960 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 15, 6)
2025-08-07 18:30:14,961 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:16,009 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:16,017 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:16,017 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Python', 'draft')
2025-08-07 18:30:16,017 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 15
2025-08-07 18:30:16,018 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 73, 15, 0)
2025-08-07 18:30:16,021 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:16,039 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 15 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:30:16,486 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:16,493 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:16,494 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Python Overview', 'draft')
2025-08-07 18:30:16,494 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 15
2025-08-07 18:30:16,495 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 74, 15, 1)
2025-08-07 18:30:16,495 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:16,511 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 15 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:30:17,408 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:17,416 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:17,416 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Installing Python', 'draft')
2025-08-07 18:30:17,416 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 15
2025-08-07 18:30:17,417 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 75, 15, 2)
2025-08-07 18:30:17,418 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:17,434 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 15 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:30:17,884 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:17,891 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:17,891 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Setting Up IDE', 'draft')
2025-08-07 18:30:17,892 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 15
2025-08-07 18:30:17,893 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 76, 15, 3)
2025-08-07 18:30:17,894 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:17,921 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 15 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:30:18,375 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:18,383 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:18,383 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Environment Setup', 'draft')
2025-08-07 18:30:18,384 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 15
2025-08-07 18:30:18,385 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 77, 15, 4)
2025-08-07 18:30:18,385 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:18,405 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 15 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:30:18,685 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:18,694 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:18,694 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 2: Basic Python Syntax', '#312e51', 2)
2025-08-07 18:30:18,695 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:30:18,695 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 16, 7)
2025-08-07 18:30:18,696 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:19,575 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:19,582 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:19,582 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Variables', 'draft')
2025-08-07 18:30:19,583 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 16
2025-08-07 18:30:19,583 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 78, 16, 0)
2025-08-07 18:30:19,584 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:19,604 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 16 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:30:20,353 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:20,361 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:20,361 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Data Types in Python', 'draft')
2025-08-07 18:30:20,362 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 16
2025-08-07 18:30:20,363 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 79, 16, 1)
2025-08-07 18:30:20,363 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:20,380 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 16 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:30:20,876 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:20,884 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:20,884 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Variables and Data Types', 'draft')
2025-08-07 18:30:20,885 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 16
2025-08-07 18:30:20,886 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 80, 16, 2)
2025-08-07 18:30:20,886 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:20,905 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 16 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:30:21,953 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:21,961 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:21,961 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'If Statements', 'draft')
2025-08-07 18:30:21,962 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 16
2025-08-07 18:30:21,963 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 81, 16, 3)
2025-08-07 18:30:21,963 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:21,981 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 16 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:30:22,326 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:22,332 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:22,332 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Loops in Python', 'draft')
2025-08-07 18:30:22,333 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 16
2025-08-07 18:30:22,333 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 82, 16, 4)
2025-08-07 18:30:22,334 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:22,352 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 16 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:30:22,796 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:22,804 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:22,805 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Control Structures', 'draft')
2025-08-07 18:30:22,805 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 16
2025-08-07 18:30:22,806 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 83, 16, 5)
2025-08-07 18:30:22,806 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:22,823 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 16 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:30:23,155 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:23,163 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:23,163 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 3: Functions and Modules', '#37303f', 2)
2025-08-07 18:30:23,163 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:30:23,164 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 17, 8)
2025-08-07 18:30:23,164 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:23,887 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:23,894 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:23,894 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Creating Functions', 'draft')
2025-08-07 18:30:23,895 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 17
2025-08-07 18:30:23,895 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 84, 17, 0)
2025-08-07 18:30:23,896 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:23,914 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 17 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:30:24,260 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:24,265 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:24,265 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Functions', 'draft')
2025-08-07 18:30:24,266 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 17
2025-08-07 18:30:24,266 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 85, 17, 1)
2025-08-07 18:30:24,267 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:24,285 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 17 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:30:25,143 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:25,151 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:25,151 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Modules', 'draft')
2025-08-07 18:30:25,152 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 17
2025-08-07 18:30:25,152 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 86, 17, 2)
2025-08-07 18:30:25,152 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:25,173 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 17 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:30:25,643 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:25,650 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:25,650 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Modules', 'draft')
2025-08-07 18:30:25,651 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 17
2025-08-07 18:30:25,652 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 87, 17, 3)
2025-08-07 18:30:25,652 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:25,669 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 17 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:30:25,865 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:25,873 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:25,874 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 4: Data Structures', '#433c4c', 2)
2025-08-07 18:30:25,874 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:30:25,875 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 18, 9)
2025-08-07 18:30:25,875 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:26,945 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:26,953 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:26,953 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Lists', 'draft')
2025-08-07 18:30:26,953 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 18
2025-08-07 18:30:26,954 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 88, 18, 0)
2025-08-07 18:30:26,955 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:26,972 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 18 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:30:27,399 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:27,406 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:27,407 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Tuples', 'draft')
2025-08-07 18:30:27,407 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 18
2025-08-07 18:30:27,407 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 89, 18, 1)
2025-08-07 18:30:27,409 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:27,425 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 18 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:30:27,796 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:27,803 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:27,803 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Lists and Tuples', 'draft')
2025-08-07 18:30:27,804 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 18
2025-08-07 18:30:27,805 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 90, 18, 2)
2025-08-07 18:30:27,805 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:27,823 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 18 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:30:28,965 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:28,973 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:28,973 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Dictionaries', 'draft')
2025-08-07 18:30:28,974 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 18
2025-08-07 18:30:28,974 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 91, 18, 3)
2025-08-07 18:30:28,975 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:28,994 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 18 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:30:29,597 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:29,606 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:29,606 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Sets', 'draft')
2025-08-07 18:30:29,606 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 18
2025-08-07 18:30:29,607 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 92, 18, 4)
2025-08-07 18:30:29,607 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:29,630 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 18 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:30:30,032 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:30,039 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:30,039 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Dictionaries and Sets', 'draft')
2025-08-07 18:30:30,040 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 18
2025-08-07 18:30:30,040 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 93, 18, 5)
2025-08-07 18:30:30,041 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:30,061 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 18 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:30:30,368 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:30,376 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:30,376 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Module 5: Conclusion and Capstone Project', '#364135', 2)
2025-08-07 18:30:30,376 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:30:30,377 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 19, 10)
2025-08-07 18:30:30,377 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:31,323 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:31,331 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:31,331 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Course Summary', 'draft')
2025-08-07 18:30:31,331 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 19
2025-08-07 18:30:31,332 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 94, 19, 0)
2025-08-07 18:30:31,332 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:31,350 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 19 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:30:32,420 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:32,427 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:32,427 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Guidelines', 'draft')
2025-08-07 18:30:32,428 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 19
2025-08-07 18:30:32,428 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 95, 19, 1)
2025-08-07 18:30:32,428 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:32,444 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 19 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:30:32,929 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:30:32,936 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:32,936 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Submission', 'draft')
2025-08-07 18:30:32,938 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 19
2025-08-07 18:30:32,938 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 96, 19, 2)
2025-08-07 18:30:32,939 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:32,954 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 19 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:30:33,077 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:30:33,077 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "Introduction to Python programming for beginners", "intended_audience": "High school students", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Module 1: Introduction to Python", "concepts": [{"name": "What is Python?", "description": "An overview of Python as a programming language, its history, and its applications.", "tasks": [{"name": "Introduction to Python", "description": "Explain what Python is, its history, and its applications in various fields.", "type": "learning_material", "id": 73}, {"name": "Quiz on Python Overview", "description": "A quiz to test understanding of what Python is and its applications.", "type": "quiz", "id": 74}]}, {"name": "Setting Up Python Environment", "description": "Instructions on how to install Python and set up the development environment.", "tasks": [{"name": "Installing Python", "description": "Step-by-step guide on how to download and install Python on different operating systems.", "type": "learning_material", "id": 75}, {"name": "Setting Up IDE", "description": "Guide on how to set up an Integrated Development Environment (IDE) for Python programming.", "type": "learning_material", "id": 76}, {"name": "Quiz on Environment Setup", "description": "A quiz to test knowledge on installing Python and setting up the IDE.", "type": "quiz", "id": 77}]}], "id": 15}, {"name": "Module 2: Basic Python Syntax", "concepts": [{"name": "Variables and Data Types", "description": "Introduction to variables, data types, and how to use them in Python.", "tasks": [{"name": "Understanding Variables", "description": "Explain what variables are and how to declare them in Python.", "type": "learning_material", "id": 78}, {"name": "Data Types in Python", "description": "Overview of different data types in Python such as integers, floats, strings, and booleans.", "type": "learning_material", "id": 79}, {"name": "Quiz on Variables and Data Types", "description": "A quiz to test understanding of variables and data types in Python.", "type": "quiz", "id": 80}]}, {"name": "Control Structures", "description": "Introduction to control structures like if statements, loops, and how they control the flow of a program.", "tasks": [{"name": "If Statements", "description": "Explain how if statements work in Python and provide examples.", "type": "learning_material", "id": 81}, {"name": "Loops in Python", "description": "Overview of for and while loops and their usage in Python.", "type": "learning_material", "id": 82}, {"name": "Quiz on Control Structures", "description": "A quiz to test understanding of control structures in Python.", "type": "quiz", "id": 83}]}], "id": 16}, {"name": "Module 3: Functions and Modules", "concepts": [{"name": "Defining Functions", "description": "How to define and call functions in Python, including parameters and return values.", "tasks": [{"name": "Creating Functions", "description": "Explain how to create functions in Python with examples.", "type": "learning_material", "id": 84}, {"name": "Quiz on Functions", "description": "A quiz to test understanding of defining and using functions in Python.", "type": "quiz", "id": 85}]}, {"name": "Using Modules", "description": "Introduction to modules in Python and how to import and use them in programs.", "tasks": [{"name": "Understanding Modules", "description": "Explain what modules are and how to use them in Python.", "type": "learning_material", "id": 86}, {"name": "Quiz on Modules", "description": "A quiz to test understanding of modules in Python.", "type": "quiz", "id": 87}]}], "id": 17}, {"name": "Module 4: Data Structures", "concepts": [{"name": "Lists and Tuples", "description": "Introduction to lists and tuples, their properties, and how to use them in Python.", "tasks": [{"name": "Understanding Lists", "description": "Explain what lists are, how to create them, and common operations.", "type": "learning_material", "id": 88}, {"name": "Understanding Tuples", "description": "Explain what tuples are, how they differ from lists, and their usage.", "type": "learning_material", "id": 89}, {"name": "Quiz on Lists and Tuples", "description": "A quiz to test understanding of lists and tuples in Python.", "type": "quiz", "id": 90}]}, {"name": "Dictionaries and Sets", "description": "Overview of dictionaries and sets, their properties, and how to use them in Python.", "tasks": [{"name": "Understanding Dictionaries", "description": "Explain what dictionaries are and how to create and manipulate them.", "type": "learning_material", "id": 91}, {"name": "Understanding Sets", "description": "Explain what sets are and how they differ from lists and dictionaries.", "type": "learning_material", "id": 92}, {"name": "Quiz on Dictionaries and Sets", "description": "A quiz to test understanding of dictionaries and sets in Python.", "type": "quiz", "id": 93}]}], "id": 18}, {"name": "Module 5: Conclusion and Capstone Project", "concepts": [{"name": "Review of Key Concepts", "description": "A summary of all the key concepts covered in the course.", "tasks": [{"name": "Course Summary", "description": "Provide a summary of all the modules and concepts learned throughout the course.", "type": "learning_material", "id": 94}]}, {"name": "Capstone Project", "description": "A project that requires students to apply all the concepts learned in the course to create a simple Python program.", "tasks": [{"name": "Capstone Project Guidelines", "description": "Provide guidelines for the capstone project, including requirements and expectations.", "type": "learning_material", "id": 95}, {"name": "Capstone Project Submission", "description": "Instructions on how to submit the capstone project for evaluation.", "type": "learning_material", "id": 96}]}], "id": 19}]}}' WHERE uuid = '08616828-4d33-49c2-befb-cc3757b1475b'
2025-08-07 18:30:33,077 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:30:33,087 - api.utils.logging - INFO - Sending course_structure_completed event for course 4, job 08616828-4d33-49c2-befb-cc3757b1475b
2025-08-07 18:30:33,087 - api.utils.logging - INFO - Course structure generation completed for course 4, job 08616828-4d33-49c2-befb-cc3757b1475b
2025-08-07 18:30:49,197 - api.utils.logging - INFO - Safety filter evaluating: How to make weapons and explosives...
2025-08-07 18:30:51,133 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": false,
  "reason": "The request asks for instructions on creating dangerous items, which violates the 'Dangerous and Illegal Acts' policy."
}
2025-08-07 18:31:40,748 - api.utils.logging - INFO - Content bypassed safety check - obviously educational: Course Description: Learn Python programming funda...
2025-08-07 18:31:40,748 - api.utils.logging - INFO - Course generation request passed safety check: Safe for educational content generation.
2025-08-07 18:31:40,950 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:40,950 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('d9c6fe95-fa4e-4dfa-b7e7-f0cd54247bc0', 4, 'started', '{"course_description": "Learn Python programming fundamentals including variables, functions, loops, and basic data structures", "intended_audience": "High school students with no programming experience", "instructions": "Make it interactive with lots of examples and practice exercises", "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 18:31:40,952 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:40,962 - api.utils.logging - INFO - Starting course structure generation for course 4, job d9c6fe95-fa4e-4dfa-b7e7-f0cd54247bc0
2025-08-07 18:31:40,962 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 18:31:42,398 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:42,404 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:42,405 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Introduction to Python', '#3c322d', 2)
2025-08-07 18:31:42,406 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:31:42,406 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 20, 11)
2025-08-07 18:31:42,407 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:44,376 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:44,382 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:44,382 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Python', 'draft')
2025-08-07 18:31:44,383 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 20
2025-08-07 18:31:44,383 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 97, 20, 0)
2025-08-07 18:31:44,384 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:44,397 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 20 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:31:44,740 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:44,745 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:44,745 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Python Applications Quiz', 'draft')
2025-08-07 18:31:44,745 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 20
2025-08-07 18:31:44,747 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 98, 20, 1)
2025-08-07 18:31:44,747 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:44,760 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 20 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:31:45,681 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:45,685 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:45,685 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Installing Python', 'draft')
2025-08-07 18:31:45,686 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 20
2025-08-07 18:31:45,686 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 99, 20, 2)
2025-08-07 18:31:45,687 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:45,701 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 20 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:31:46,147 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:46,156 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:46,156 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Environment Setup Quiz', 'draft')
2025-08-07 18:31:46,156 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 20
2025-08-07 18:31:46,157 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 100, 20, 3)
2025-08-07 18:31:46,157 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:46,175 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 20 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:31:46,395 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:46,400 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:46,400 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Variables and Data Types', '#553c2d', 2)
2025-08-07 18:31:46,400 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:31:46,401 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 21, 12)
2025-08-07 18:31:46,401 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:47,416 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:47,499 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:47,499 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'What are Variables?', 'draft')
2025-08-07 18:31:47,500 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 21
2025-08-07 18:31:47,500 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 101, 21, 0)
2025-08-07 18:31:47,501 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:47,535 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 21 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:31:47,844 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:47,850 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:47,850 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Variables Quiz', 'draft')
2025-08-07 18:31:47,851 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 21
2025-08-07 18:31:47,851 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 102, 21, 1)
2025-08-07 18:31:47,851 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:47,866 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 21 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:31:49,055 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:49,062 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:49,062 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Python Data Types', 'draft')
2025-08-07 18:31:49,063 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 21
2025-08-07 18:31:49,063 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 103, 21, 2)
2025-08-07 18:31:49,064 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:49,083 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 21 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:31:49,422 - api.utils.logging - INFO - Content bypassed safety check - obviously educational: Course Description: Introduction to Biology: Cell ...
2025-08-07 18:31:49,422 - api.utils.logging - INFO - Course generation request passed safety check: Safe for educational content generation.
2025-08-07 18:31:49,676 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:49,676 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('e4d39b05-b07d-49a1-8763-2e5313201f3b', 5, 'started', '{"course_description": "Introduction to Biology: Cell structure, genetics, and evolution for middle school students", "intended_audience": "Middle school students aged 12-14", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 18:31:49,676 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:49,682 - api.utils.logging - INFO - Starting course structure generation for course 5, job e4d39b05-b07d-49a1-8763-2e5313201f3b
2025-08-07 18:31:49,682 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 18:31:49,910 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:49,919 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:49,920 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Data Types Quiz', 'draft')
2025-08-07 18:31:49,920 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 21
2025-08-07 18:31:49,921 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 104, 21, 3)
2025-08-07 18:31:49,921 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:49,935 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 21 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:31:49,952 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:49,956 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:49,957 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Control Structures', '#433c4c', 2)
2025-08-07 18:31:49,957 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:31:49,960 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 22, 13)
2025-08-07 18:31:49,960 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:50,720 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:50,727 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:50,727 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Conditionals', 'draft')
2025-08-07 18:31:50,727 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 22
2025-08-07 18:31:50,728 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 105, 22, 0)
2025-08-07 18:31:50,728 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:50,748 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 22 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:31:50,851 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:50,857 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:50,857 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Cell Structure', '#463c46', 2)
2025-08-07 18:31:50,859 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 5
2025-08-07 18:31:50,861 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (5, 23, 3)
2025-08-07 18:31:50,861 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:51,075 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:51,082 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:51,082 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Conditionals Quiz', 'draft')
2025-08-07 18:31:51,083 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 22
2025-08-07 18:31:51,083 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 106, 22, 1)
2025-08-07 18:31:51,084 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:51,103 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 22 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:31:52,014 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:52,019 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:52,019 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'What are Cells?', 'draft')
2025-08-07 18:31:52,019 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 23
2025-08-07 18:31:52,020 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 107, 23, 0)
2025-08-07 18:31:52,020 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:52,033 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 23 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:31:52,093 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:52,099 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:52,099 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'For Loops', 'draft')
2025-08-07 18:31:52,099 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 22
2025-08-07 18:31:52,100 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 108, 22, 2)
2025-08-07 18:31:52,100 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:52,113 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 22 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:31:52,648 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:52,654 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:52,655 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'While Loops', 'draft')
2025-08-07 18:31:52,656 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 22
2025-08-07 18:31:52,656 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 109, 22, 3)
2025-08-07 18:31:52,657 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:52,673 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 22 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:31:52,702 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:52,710 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:52,710 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Cell Types Quiz', 'draft')
2025-08-07 18:31:52,710 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 23
2025-08-07 18:31:52,711 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 110, 23, 1)
2025-08-07 18:31:52,711 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:52,735 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 23 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:31:53,067 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:53,071 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:53,071 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Loops Quiz', 'draft')
2025-08-07 18:31:53,072 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 22
2025-08-07 18:31:53,073 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 111, 22, 4)
2025-08-07 18:31:53,074 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:53,088 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 22 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:31:53,315 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:53,324 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:53,324 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Functions in Python', '#364135', 2)
2025-08-07 18:31:53,325 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:31:53,325 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 24, 14)
2025-08-07 18:31:53,326 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:54,193 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:54,201 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:54,202 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of Organelles', 'draft')
2025-08-07 18:31:54,202 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 23
2025-08-07 18:31:54,203 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 112, 23, 2)
2025-08-07 18:31:54,203 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:54,221 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 23 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:31:54,747 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:54,752 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:54,753 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'What are Functions?', 'draft')
2025-08-07 18:31:54,755 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 24
2025-08-07 18:31:54,756 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 113, 24, 0)
2025-08-07 18:31:54,757 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:54,774 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 24 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:31:55,204 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:55,212 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:55,212 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Organelles Function Quiz', 'draft')
2025-08-07 18:31:55,212 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 23
2025-08-07 18:31:55,213 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 114, 23, 3)
2025-08-07 18:31:55,213 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:55,234 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 23 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:31:55,448 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:55,456 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:55,456 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Functions Quiz', 'draft')
2025-08-07 18:31:55,456 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 24
2025-08-07 18:31:55,457 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 115, 24, 1)
2025-08-07 18:31:55,459 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:55,483 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 24 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:31:56,556 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:56,565 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:56,565 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Cell Membrane Basics', 'draft')
2025-08-07 18:31:56,565 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 23
2025-08-07 18:31:56,566 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 116, 23, 4)
2025-08-07 18:31:56,566 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:56,589 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:56,589 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 23 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:31:56,609 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:56,609 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Parameters and Return Values', 'draft')
2025-08-07 18:31:56,609 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 24
2025-08-07 18:31:56,610 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 117, 24, 2)
2025-08-07 18:31:56,610 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:56,631 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 24 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:31:56,953 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:56,974 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:56,974 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Function Parameters Quiz', 'draft')
2025-08-07 18:31:56,975 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 24
2025-08-07 18:31:56,975 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 118, 24, 3)
2025-08-07 18:31:56,976 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:57,007 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 24 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:31:57,054 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:57,067 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:57,067 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Membrane Structure Quiz', 'draft')
2025-08-07 18:31:57,068 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 23
2025-08-07 18:31:57,068 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 119, 23, 5)
2025-08-07 18:31:57,069 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:57,092 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 23 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:31:57,245 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:57,255 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:57,255 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Basic Data Structures', '#364135', 2)
2025-08-07 18:31:57,256 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:31:57,257 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 25, 15)
2025-08-07 18:31:57,258 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:57,396 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:57,403 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:57,403 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Genetics', '#37303f', 2)
2025-08-07 18:31:57,405 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 5
2025-08-07 18:31:57,406 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (5, 26, 4)
2025-08-07 18:31:57,407 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:58,236 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:58,246 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:58,246 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Lists', 'draft')
2025-08-07 18:31:58,246 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 25
2025-08-07 18:31:58,249 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 120, 25, 0)
2025-08-07 18:31:58,250 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:58,286 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 25 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:31:58,350 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:58,361 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:58,365 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'What is Genetics?', 'draft')
2025-08-07 18:31:58,366 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 26
2025-08-07 18:31:58,366 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 121, 26, 0)
2025-08-07 18:31:58,367 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:58,388 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 26 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:31:58,518 - api.utils.logging - INFO - Content bypassed safety check - obviously educational: Course Description: World History: Ancient civiliz...
2025-08-07 18:31:58,518 - api.utils.logging - INFO - Course generation request passed safety check: Safe for educational content generation.
2025-08-07 18:31:59,018 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:31:59,021 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:59,021 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Genetics Basics Quiz', 'draft')
2025-08-07 18:31:59,021 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 26
2025-08-07 18:31:59,021 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 122, 26, 1)
2025-08-07 18:31:59,021 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:59,031 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:59,031 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:59,031 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('f9a85758-9136-4d7e-99c1-b2c3442235ce', 6, 'started', '{"course_description": "World History: Ancient civilizations, empires, and cultural developments from 3000 BCE to 500 CE", "intended_audience": "College freshmen taking introductory history", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 18:31:59,031 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:59,033 - api.utils.logging - INFO - Starting course structure generation for course 6, job f9a85758-9136-4d7e-99c1-b2c3442235ce
2025-08-07 18:31:59,033 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 18:31:59,267 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 26 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:31:59,292 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:59,292 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Lists Quiz', 'draft')
2025-08-07 18:31:59,294 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 25
2025-08-07 18:31:59,295 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 123, 25, 1)
2025-08-07 18:31:59,295 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:59,309 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 25 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:31:59,675 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:31:59,681 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:31:59,682 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Understanding Dictionaries', 'draft')
2025-08-07 18:31:59,683 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 25
2025-08-07 18:31:59,684 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 124, 25, 2)
2025-08-07 18:31:59,685 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:31:59,701 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 25 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:00,144 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:00,152 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:00,152 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Mendel''s Experiments', 'draft')
2025-08-07 18:32:00,153 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 26
2025-08-07 18:32:00,154 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 125, 26, 2)
2025-08-07 18:32:00,154 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:00,175 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 26 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:00,259 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:32:00,269 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:00,270 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Dictionaries Quiz', 'draft')
2025-08-07 18:32:00,271 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 25
2025-08-07 18:32:00,272 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 126, 25, 3)
2025-08-07 18:32:00,273 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:00,290 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 25 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:00,350 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:00,356 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:00,356 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Introduction to Ancient Civilizations', '#433c4c', 2)
2025-08-07 18:32:00,357 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 6
2025-08-07 18:32:00,357 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (6, 27, 3)
2025-08-07 18:32:00,359 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:00,532 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:32:00,540 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:00,540 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Conclusion and Capstone Project', '#2d3748', 2)
2025-08-07 18:32:00,540 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 4
2025-08-07 18:32:00,541 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (4, 28, 16)
2025-08-07 18:32:00,541 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:00,620 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:00,627 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:00,627 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Mendelian Genetics Quiz', 'draft')
2025-08-07 18:32:00,628 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 26
2025-08-07 18:32:00,629 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 127, 26, 3)
2025-08-07 18:32:00,630 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:00,650 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 26 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:01,256 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:32:01,267 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:01,267 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Review of Key Concepts', 'draft')
2025-08-07 18:32:01,269 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 28
2025-08-07 18:32:01,274 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 128, 28, 0)
2025-08-07 18:32:01,275 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:01,300 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 28 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:01,361 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:01,367 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:01,368 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of Civilization Characteristics', 'draft')
2025-08-07 18:32:01,369 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 27
2025-08-07 18:32:01,370 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 129, 27, 0)
2025-08-07 18:32:01,370 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:01,401 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 27 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:01,515 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:01,522 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:01,522 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'DNA Basics', 'draft')
2025-08-07 18:32:01,523 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 26
2025-08-07 18:32:01,523 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 130, 26, 4)
2025-08-07 18:32:01,523 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:01,545 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 26 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:32:01,858 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:01,869 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:01,870 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Civilization Characteristics', 'draft')
2025-08-07 18:32:01,871 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 27
2025-08-07 18:32:01,872 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 131, 27, 1)
2025-08-07 18:32:01,874 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:01,898 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 27 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:01,928 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:01,938 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:01,938 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'DNA Function Quiz', 'draft')
2025-08-07 18:32:01,938 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 26
2025-08-07 18:32:01,940 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 132, 26, 5)
2025-08-07 18:32:01,940 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:01,962 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 26 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:32:02,100 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:02,107 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:02,107 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Evolution', '#553c2d', 2)
2025-08-07 18:32:02,108 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 5
2025-08-07 18:32:02,108 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (5, 29, 5)
2025-08-07 18:32:02,108 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:02,252 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:32:02,260 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:02,260 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Guidelines', 'draft')
2025-08-07 18:32:02,260 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 28
2025-08-07 18:32:02,262 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 133, 28, 1)
2025-08-07 18:32:02,262 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:02,284 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 28 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:02,824 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 4
2025-08-07 18:32:02,829 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:02,829 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Capstone Project Submission', 'draft')
2025-08-07 18:32:02,830 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 4 AND milestone_id = 28
2025-08-07 18:32:02,830 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (4, 134, 28, 2)
2025-08-07 18:32:02,830 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:02,843 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 4 AND ct.milestone_id = 28 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:03,054 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:03,054 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "Learn Python programming fundamentals including variables, functions, loops, and basic data structures", "intended_audience": "High school students with no programming experience", "instructions": "Make it interactive with lots of examples and practice exercises", "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Introduction to Python", "concepts": [{"name": "What is Python?", "description": "An introduction to Python programming language, its history, and its applications.", "tasks": [{"name": "Introduction to Python", "description": "Explain what Python is, its history, and where it is used in the industry.", "type": "learning_material", "id": 97}, {"name": "Python Applications Quiz", "description": "A quiz to test understanding of Python applications and its significance.", "type": "quiz", "id": 98}]}, {"name": "Setting Up Python Environment", "description": "Guide on how to install Python and set up the development environment.", "tasks": [{"name": "Installing Python", "description": "Step-by-step instructions on how to download and install Python on different operating systems.", "type": "learning_material", "id": 99}, {"name": "Environment Setup Quiz", "description": "A quiz to ensure learners can set up their Python environment correctly.", "type": "quiz", "id": 100}]}], "id": 20}, {"name": "Variables and Data Types", "concepts": [{"name": "Understanding Variables", "description": "Introduction to variables, how to declare them, and their importance in programming.", "tasks": [{"name": "What are Variables?", "description": "Explain the concept of variables in programming and how they are used in Python.", "type": "learning_material", "id": 101}, {"name": "Variables Quiz", "description": "A quiz to test understanding of variables and their usage in Python.", "type": "quiz", "id": 102}]}, {"name": "Data Types in Python", "description": "Overview of different data types in Python such as integers, floats, strings, and booleans.", "tasks": [{"name": "Python Data Types", "description": "Explain the various data types available in Python and their characteristics.", "type": "learning_material", "id": 103}, {"name": "Data Types Quiz", "description": "A quiz to test understanding of different data types in Python.", "type": "quiz", "id": 104}]}], "id": 21}, {"name": "Control Structures", "concepts": [{"name": "Conditional Statements", "description": "Introduction to if, elif, and else statements in Python.", "tasks": [{"name": "Understanding Conditionals", "description": "Explain how conditional statements work in Python and provide examples.", "type": "learning_material", "id": 105}, {"name": "Conditionals Quiz", "description": "A quiz to test understanding of conditional statements with practical examples.", "type": "quiz", "id": 106}]}, {"name": "Loops in Python", "description": "Overview of for loops and while loops, including their syntax and use cases.", "tasks": [{"name": "For Loops", "description": "Explain the syntax and use of for loops in Python with examples.", "type": "learning_material", "id": 108}, {"name": "While Loops", "description": "Explain the syntax and use of while loops in Python with examples.", "type": "learning_material", "id": 109}, {"name": "Loops Quiz", "description": "A quiz to test understanding of loops with practical exercises.", "type": "quiz", "id": 111}]}], "id": 22}, {"name": "Functions in Python", "concepts": [{"name": "Defining Functions", "description": "Introduction to functions, how to define them, and their importance in programming.", "tasks": [{"name": "What are Functions?", "description": "Explain the concept of functions in Python and how to define and call them.", "type": "learning_material", "id": 113}, {"name": "Functions Quiz", "description": "A quiz to test understanding of functions and their usage in Python.", "type": "quiz", "id": 115}]}, {"name": "Function Parameters and Return Values", "description": "Overview of how to use parameters in functions and return values.", "tasks": [{"name": "Parameters and Return Values", "description": "Explain how to pass parameters to functions and return values from them.", "type": "learning_material", "id": 117}, {"name": "Function Parameters Quiz", "description": "A quiz to test understanding of function parameters and return values.", "type": "quiz", "id": 118}]}], "id": 24}, {"name": "Basic Data Structures", "concepts": [{"name": "Lists in Python", "description": "Introduction to lists, how to create them, and common operations.", "tasks": [{"name": "Understanding Lists", "description": "Explain what lists are in Python and how to manipulate them.", "type": "learning_material", "id": 120}, {"name": "Lists Quiz", "description": "A quiz to test understanding of lists and their operations in Python.", "type": "quiz", "id": 123}]}, {"name": "Dictionaries in Python", "description": "Overview of dictionaries, how to create them, and their use cases.", "tasks": [{"name": "Understanding Dictionaries", "description": "Explain what dictionaries are in Python and how to use them effectively.", "type": "learning_material", "id": 124}, {"name": "Dictionaries Quiz", "description": "A quiz to test understanding of dictionaries and their operations in Python.", "type": "quiz", "id": 126}]}], "id": 25}, {"name": "Conclusion and Capstone Project", "concepts": [{"name": "Course Summary", "description": "A summary of all the concepts learned throughout the course.", "tasks": [{"name": "Review of Key Concepts", "description": "Summarize the key concepts covered in the course and their applications.", "type": "learning_material", "id": 128}]}, {"name": "Capstone Project", "description": "A project that requires learners to apply all the concepts learned in the course to create a simple Python program.", "tasks": [{"name": "Capstone Project Guidelines", "description": "Provide guidelines for the capstone project, including requirements and expectations.", "type": "learning_material", "id": 133}, {"name": "Capstone Project Submission", "description": "Instructions on how to submit the capstone project for evaluation.", "type": "quiz", "id": 134}]}], "id": 28}]}}' WHERE uuid = 'd9c6fe95-fa4e-4dfa-b7e7-f0cd54247bc0'
2025-08-07 18:32:03,057 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:03,066 - api.utils.logging - INFO - Sending course_structure_completed event for course 4, job d9c6fe95-fa4e-4dfa-b7e7-f0cd54247bc0
2025-08-07 18:32:03,066 - api.utils.logging - INFO - Course structure generation completed for course 4, job d9c6fe95-fa4e-4dfa-b7e7-f0cd54247bc0
2025-08-07 18:32:03,213 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:03,220 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:03,220 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'What is Evolution?', 'draft')
2025-08-07 18:32:03,221 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 29
2025-08-07 18:32:03,222 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 135, 29, 0)
2025-08-07 18:32:03,222 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:03,244 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 29 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:03,427 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:03,434 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:03,434 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of River Valley Civilizations', 'draft')
2025-08-07 18:32:03,435 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 27
2025-08-07 18:32:03,435 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 136, 27, 2)
2025-08-07 18:32:03,436 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:03,456 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 27 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:03,741 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:03,746 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:03,746 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Evolution Basics Quiz', 'draft')
2025-08-07 18:32:03,747 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 29
2025-08-07 18:32:03,749 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 137, 29, 1)
2025-08-07 18:32:03,750 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:03,769 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 29 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:04,078 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:04,083 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:04,084 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on River Valley Civilizations', 'draft')
2025-08-07 18:32:04,084 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 27
2025-08-07 18:32:04,085 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 138, 27, 3)
2025-08-07 18:32:04,089 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:04,107 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 27 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:04,361 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:04,371 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:04,371 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Empires of the Ancient World', '#463c46', 2)
2025-08-07 18:32:04,372 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 6
2025-08-07 18:32:04,372 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (6, 30, 4)
2025-08-07 18:32:04,373 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:04,876 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:04,881 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:04,881 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Types of Evidence', 'draft')
2025-08-07 18:32:04,882 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 29
2025-08-07 18:32:04,882 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 139, 29, 2)
2025-08-07 18:32:04,882 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:04,895 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 29 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:05,566 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:05,572 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:05,573 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Evidence of Evolution Quiz', 'draft')
2025-08-07 18:32:05,573 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 29
2025-08-07 18:32:05,574 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 140, 29, 3)
2025-08-07 18:32:05,575 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:05,601 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 29 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:06,074 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:06,079 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:06,080 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Factors Leading to Empire Formation', 'draft')
2025-08-07 18:32:06,081 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 30
2025-08-07 18:32:06,083 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 141, 30, 0)
2025-08-07 18:32:06,085 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:06,108 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 30 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:06,625 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:06,638 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:06,639 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Human Evolution Overview', 'draft')
2025-08-07 18:32:06,641 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 29
2025-08-07 18:32:06,641 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 142, 29, 4)
2025-08-07 18:32:06,642 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:06,661 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 29 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:32:06,805 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:06,814 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:06,814 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Empire Formation Factors', 'draft')
2025-08-07 18:32:06,816 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 30
2025-08-07 18:32:06,818 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 143, 30, 1)
2025-08-07 18:32:06,819 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:06,836 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 30 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:07,121 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:07,132 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:07,132 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Human Evolution Quiz', 'draft')
2025-08-07 18:32:07,132 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 29
2025-08-07 18:32:07,133 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 144, 29, 5)
2025-08-07 18:32:07,133 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:07,157 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 29 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:32:07,334 - api.utils.logging - INFO - Content bypassed safety check - obviously educational: Course Description: Introduction to Chemistry: Ato...
2025-08-07 18:32:07,334 - api.utils.logging - INFO - Course generation request passed safety check: Safe for educational content generation.
2025-08-07 18:32:07,696 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:07,696 - api.utils.logging - INFO - Executing operation: INSERT INTO course_generation_jobs (uuid, course_id, status, job_details) VALUES ('f01c9b46-3343-4fea-bbc2-ebf8e216307f', 7, 'started', '{"course_description": "Introduction to Chemistry: Atomic structure, chemical bonds, and basic reactions for beginners", "intended_audience": "High school chemistry students", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null}')
2025-08-07 18:32:07,696 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:07,697 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:07,706 - api.utils.logging - INFO - Starting course structure generation for course 7, job f01c9b46-3343-4fea-bbc2-ebf8e216307f
2025-08-07 18:32:07,706 - api.utils.logging - INFO - OpenAI file ID: None
2025-08-07 18:32:08,063 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:08,063 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Course Conclusion and Capstone Project', '#3c4b64', 2)
2025-08-07 18:32:08,064 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 5
2025-08-07 18:32:08,064 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (5, 31, 6)
2025-08-07 18:32:08,064 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:08,065 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:08,122 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:08,123 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of Major Ancient Empires', 'draft')
2025-08-07 18:32:08,123 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 30
2025-08-07 18:32:08,124 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 145, 30, 2)
2025-08-07 18:32:08,125 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:08,141 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 30 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:08,333 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:08,341 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:08,341 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Summary of Key Concepts', 'draft')
2025-08-07 18:32:08,342 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 31
2025-08-07 18:32:08,342 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 146, 31, 0)
2025-08-07 18:32:08,342 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:08,360 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 31 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:08,595 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:08,600 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:08,601 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Major Ancient Empires', 'draft')
2025-08-07 18:32:08,601 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 30
2025-08-07 18:32:08,601 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 147, 30, 3)
2025-08-07 18:32:08,602 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:08,617 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 30 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:08,926 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:08,933 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:08,933 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Final Quiz', 'draft')
2025-08-07 18:32:08,934 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 31
2025-08-07 18:32:08,934 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 148, 31, 1)
2025-08-07 18:32:08,938 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:08,958 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 31 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:08,978 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:08,986 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:08,986 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Cultural Developments in Ancient Civilizations', '#334155', 2)
2025-08-07 18:32:08,986 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 6
2025-08-07 18:32:08,987 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (6, 32, 5)
2025-08-07 18:32:08,987 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:10,286 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:10,291 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:10,291 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Guidelines', 'draft')
2025-08-07 18:32:10,291 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 31
2025-08-07 18:32:10,292 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 149, 31, 2)
2025-08-07 18:32:10,292 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:10,305 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 31 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:10,505 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:10,509 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:10,510 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of Ancient Religions and Philosophies', 'draft')
2025-08-07 18:32:10,510 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 32
2025-08-07 18:32:10,510 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 150, 32, 0)
2025-08-07 18:32:10,511 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:10,528 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 32 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:10,812 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 5
2025-08-07 18:32:10,818 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:10,818 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Project Presentation Quiz', 'draft')
2025-08-07 18:32:10,818 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 5 AND milestone_id = 31
2025-08-07 18:32:10,819 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (5, 151, 31, 3)
2025-08-07 18:32:10,819 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:10,833 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 5 AND ct.milestone_id = 31 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:11,007 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:11,008 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "Introduction to Biology: Cell structure, genetics, and evolution for middle school students", "intended_audience": "Middle school students aged 12-14", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Cell Structure", "concepts": [{"name": "Introduction to Cells", "description": "Understanding what cells are, their importance, and the basic types of cells (prokaryotic and eukaryotic).", "tasks": [{"name": "What are Cells?", "description": "An overview of cells, their definition, and significance in living organisms.", "type": "learning_material", "id": 107}, {"name": "Cell Types Quiz", "description": "A quiz to test understanding of prokaryotic and eukaryotic cells, including their characteristics and differences.", "type": "quiz", "id": 110}]}, {"name": "Cell Organelles", "description": "Exploring the various organelles found in eukaryotic cells and their functions.", "tasks": [{"name": "Overview of Organelles", "description": "Detailed descriptions of organelles such as the nucleus, mitochondria, ribosomes, etc., and their roles in the cell.", "type": "learning_material", "id": 112}, {"name": "Organelles Function Quiz", "description": "A quiz to assess knowledge of different organelles and their specific functions within the cell.", "type": "quiz", "id": 114}]}, {"name": "Cell Membrane Structure", "description": "Understanding the structure and function of the cell membrane, including the fluid mosaic model.", "tasks": [{"name": "Cell Membrane Basics", "description": "Explanation of the cell membrane structure, its components, and its role in regulating what enters and exits the cell.", "type": "learning_material", "id": 116}, {"name": "Membrane Structure Quiz", "description": "A quiz to evaluate understanding of the cell membrane structure and its functions.", "type": "quiz", "id": 119}]}], "id": 23}, {"name": "Genetics", "concepts": [{"name": "Introduction to Genetics", "description": "Basic concepts of genetics, including genes, alleles, and chromosomes.", "tasks": [{"name": "What is Genetics?", "description": "An introduction to genetics, explaining key terms and concepts.", "type": "learning_material", "id": 121}, {"name": "Genetics Basics Quiz", "description": "A quiz to test understanding of basic genetic concepts such as genes and alleles.", "type": "quiz", "id": 122}]}, {"name": "Mendelian Genetics", "description": "Exploring Gregor Mendel''s experiments and the principles of inheritance.", "tasks": [{"name": "Mendel''s Experiments", "description": "Overview of Mendel''s work with pea plants and the laws of inheritance he discovered.", "type": "learning_material", "id": 125}, {"name": "Mendelian Genetics Quiz", "description": "A quiz to assess understanding of Mendel''s principles and how they apply to inheritance.", "type": "quiz", "id": 127}]}, {"name": "DNA Structure and Function", "description": "Understanding the structure of DNA and its role in heredity.", "tasks": [{"name": "DNA Basics", "description": "Explanation of the structure of DNA, including nucleotides and the double helix model.", "type": "learning_material", "id": 130}, {"name": "DNA Function Quiz", "description": "A quiz to evaluate knowledge of DNA structure and its functions in genetics.", "type": "quiz", "id": 132}]}], "id": 26}, {"name": "Evolution", "concepts": [{"name": "Introduction to Evolution", "description": "Basic concepts of evolution, including natural selection and adaptation.", "tasks": [{"name": "What is Evolution?", "description": "An overview of evolution, its significance, and the theory of natural selection.", "type": "learning_material", "id": 135}, {"name": "Evolution Basics Quiz", "description": "A quiz to test understanding of evolution and natural selection concepts.", "type": "quiz", "id": 137}]}, {"name": "Evidence of Evolution", "description": "Exploring the various types of evidence that support the theory of evolution.", "tasks": [{"name": "Types of Evidence", "description": "Discussion of fossil records, comparative anatomy, and molecular biology as evidence for evolution.", "type": "learning_material", "id": 139}, {"name": "Evidence of Evolution Quiz", "description": "A quiz to assess understanding of the different types of evidence supporting evolution.", "type": "quiz", "id": 140}]}, {"name": "Human Evolution", "description": "Understanding the evolution of humans and our closest relatives.", "tasks": [{"name": "Human Evolution Overview", "description": "An exploration of human evolution, including key species and milestones in our evolutionary history.", "type": "learning_material", "id": 142}, {"name": "Human Evolution Quiz", "description": "A quiz to evaluate knowledge of human evolution and related concepts.", "type": "quiz", "id": 144}]}], "id": 29}, {"name": "Course Conclusion and Capstone Project", "concepts": [{"name": "Course Summary", "description": "A recap of the key concepts learned throughout the course in cell structure, genetics, and evolution.", "tasks": [{"name": "Summary of Key Concepts", "description": "A summary of the main topics covered in the course, highlighting important points.", "type": "learning_material", "id": 146}, {"name": "Final Quiz", "description": "A comprehensive quiz covering all topics discussed in the course to assess overall understanding.", "type": "quiz", "id": 148}]}, {"name": "Capstone Project", "description": "An integrative project where students apply what they have learned in a creative way.", "tasks": [{"name": "Capstone Project Guidelines", "description": "Instructions for the capstone project, including objectives and expectations for students.", "type": "learning_material", "id": 149}, {"name": "Project Presentation Quiz", "description": "A quiz to prepare students for presenting their capstone projects, focusing on key presentation skills.", "type": "quiz", "id": 151}]}], "id": 31}]}}' WHERE uuid = 'e4d39b05-b07d-49a1-8763-2e5313201f3b'
2025-08-07 18:32:11,008 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:11,020 - api.utils.logging - INFO - Sending course_structure_completed event for course 5, job e4d39b05-b07d-49a1-8763-2e5313201f3b
2025-08-07 18:32:11,020 - api.utils.logging - INFO - Course structure generation completed for course 5, job e4d39b05-b07d-49a1-8763-2e5313201f3b
2025-08-07 18:32:11,088 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:11,092 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:11,092 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Ancient Religions and Philosophies', 'draft')
2025-08-07 18:32:11,093 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 32
2025-08-07 18:32:11,093 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 152, 32, 1)
2025-08-07 18:32:11,094 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:11,106 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 32 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:11,238 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:11,243 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:11,243 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Atomic Structure', '#364135', 2)
2025-08-07 18:32:11,243 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 7
2025-08-07 18:32:11,244 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (7, 33, 0)
2025-08-07 18:32:11,244 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:12,243 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:12,248 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:12,248 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of Ancient Art and Architecture', 'draft')
2025-08-07 18:32:12,250 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 32
2025-08-07 18:32:12,252 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 153, 32, 2)
2025-08-07 18:32:12,252 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:12,268 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 32 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:12,319 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:12,323 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:12,324 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Atoms and Elements', 'draft')
2025-08-07 18:32:12,324 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 33
2025-08-07 18:32:12,325 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 154, 33, 0)
2025-08-07 18:32:12,325 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:12,339 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 33 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:12,720 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:12,728 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:12,728 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Quiz on Ancient Art and Architecture', 'draft')
2025-08-07 18:32:12,729 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 32
2025-08-07 18:32:12,730 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 155, 32, 3)
2025-08-07 18:32:12,730 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:12,746 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 32 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:12,824 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:12,828 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:12,828 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Atoms and Elements Quiz', 'draft')
2025-08-07 18:32:12,829 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 33
2025-08-07 18:32:12,829 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 156, 33, 1)
2025-08-07 18:32:12,829 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:12,859 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 33 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:13,019 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:13,024 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:13,024 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Conclusion and Capstone Project', '#553c2d', 2)
2025-08-07 18:32:13,024 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 6
2025-08-07 18:32:13,025 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (6, 34, 6)
2025-08-07 18:32:13,025 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:14,279 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:14,287 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:14,287 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Summary of Course Content', 'draft')
2025-08-07 18:32:14,288 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 34
2025-08-07 18:32:14,288 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 157, 34, 0)
2025-08-07 18:32:14,288 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:14,309 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 34 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:14,520 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:14,525 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:14,525 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of Subatomic Particles', 'draft')
2025-08-07 18:32:14,525 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 33
2025-08-07 18:32:14,526 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 158, 33, 2)
2025-08-07 18:32:14,527 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:14,543 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 33 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:14,714 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:14,719 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:14,719 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Final Quiz on Course Content', 'draft')
2025-08-07 18:32:14,719 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 34
2025-08-07 18:32:14,719 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 159, 34, 1)
2025-08-07 18:32:14,720 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:14,739 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 34 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:14,990 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:14,998 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:14,998 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Subatomic Particles Quiz', 'draft')
2025-08-07 18:32:14,998 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 33
2025-08-07 18:32:14,999 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 160, 33, 3)
2025-08-07 18:32:14,999 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:15,020 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 33 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:15,828 - api.utils.logging - INFO - Safety filter evaluating: Course Description: How to create weapons and cause harm to others
Intended Audience: Students...
2025-08-07 18:32:16,025 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:16,034 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:16,034 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Guidelines', 'draft')
2025-08-07 18:32:16,034 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 34
2025-08-07 18:32:16,035 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 161, 34, 2)
2025-08-07 18:32:16,035 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:16,051 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 34 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:16,466 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:16,471 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:16,472 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Atomic Number and Mass Number Explained', 'draft')
2025-08-07 18:32:16,473 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 33
2025-08-07 18:32:16,473 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 162, 33, 4)
2025-08-07 18:32:16,474 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:16,492 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 33 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:32:16,837 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 6
2025-08-07 18:32:16,845 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:16,845 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Capstone Project Submission', 'draft')
2025-08-07 18:32:16,845 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 6 AND milestone_id = 34
2025-08-07 18:32:16,846 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (6, 163, 34, 3)
2025-08-07 18:32:16,846 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:16,863 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 6 AND ct.milestone_id = 34 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:16,967 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:16,967 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "World History: Ancient civilizations, empires, and cultural developments from 3000 BCE to 500 CE", "intended_audience": "College freshmen taking introductory history", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Introduction to Ancient Civilizations", "concepts": [{"name": "Defining Civilization", "description": "This concept explores the characteristics that define a civilization, including social structure, government, and culture.", "tasks": [{"name": "Overview of Civilization Characteristics", "description": "Discuss the key characteristics that define a civilization, including urban development, social stratification, and cultural practices.", "type": "learning_material", "id": 129}, {"name": "Quiz on Civilization Characteristics", "description": "Test understanding of the characteristics that define a civilization with multiple-choice and short-answer questions.", "type": "quiz", "id": 131}]}, {"name": "Early River Valley Civilizations", "description": "This concept covers the emergence of early civilizations in river valleys, such as Mesopotamia, Egypt, the Indus Valley, and China.", "tasks": [{"name": "Overview of River Valley Civilizations", "description": "Examine the major river valley civilizations, their geographical locations, and their contributions to human development.", "type": "learning_material", "id": 136}, {"name": "Quiz on River Valley Civilizations", "description": "Assess knowledge of the early river valley civilizations and their significance in history.", "type": "quiz", "id": 138}]}], "id": 27}, {"name": "Empires of the Ancient World", "concepts": [{"name": "The Rise of Empires", "description": "This concept discusses the factors that contributed to the rise of empires in the ancient world, including military conquests and trade.", "tasks": [{"name": "Factors Leading to Empire Formation", "description": "Analyze the various factors that led to the formation of empires, including economic, political, and social aspects.", "type": "learning_material", "id": 141}, {"name": "Quiz on Empire Formation Factors", "description": "Evaluate understanding of the factors that contributed to the rise of ancient empires through a series of questions.", "type": "quiz", "id": 143}]}, {"name": "Major Ancient Empires", "description": "This concept focuses on the major empires of the ancient world, including the Roman Empire, Persian Empire, and Maurya Empire.", "tasks": [{"name": "Overview of Major Ancient Empires", "description": "Explore the key features, achievements, and legacies of major ancient empires.", "type": "learning_material", "id": 145}, {"name": "Quiz on Major Ancient Empires", "description": "Test knowledge of the major ancient empires and their historical significance.", "type": "quiz", "id": 147}]}], "id": 30}, {"name": "Cultural Developments in Ancient Civilizations", "concepts": [{"name": "Religion and Philosophy", "description": "This concept examines the major religions and philosophical systems that emerged in ancient civilizations, such as Hinduism, Buddhism, and Confucianism.", "tasks": [{"name": "Overview of Ancient Religions and Philosophies", "description": "Discuss the key beliefs and practices of major ancient religions and philosophies.", "type": "learning_material", "id": 150}, {"name": "Quiz on Ancient Religions and Philosophies", "description": "Assess understanding of the major religions and philosophies that shaped ancient civilizations.", "type": "quiz", "id": 152}]}, {"name": "Art and Architecture", "description": "This concept explores the artistic and architectural achievements of ancient civilizations, including sculpture, painting, and monumental architecture.", "tasks": [{"name": "Overview of Ancient Art and Architecture", "description": "Examine the significant artistic and architectural contributions of ancient civilizations.", "type": "learning_material", "id": 153}, {"name": "Quiz on Ancient Art and Architecture", "description": "Evaluate knowledge of the art and architecture of ancient civilizations through a quiz.", "type": "quiz", "id": 155}]}], "id": 32}, {"name": "Conclusion and Capstone Project", "concepts": [{"name": "Review of Key Concepts", "description": "This concept summarizes the key concepts covered in the course, reinforcing the major themes and ideas.", "tasks": [{"name": "Summary of Course Content", "description": "Provide a comprehensive summary of the key concepts discussed throughout the course.", "type": "learning_material", "id": 157}, {"name": "Final Quiz on Course Content", "description": "A comprehensive quiz that covers all major topics discussed in the course.", "type": "quiz", "id": 159}]}, {"name": "Capstone Project", "description": "This concept involves a project where students apply what they have learned to analyze a specific ancient civilization or empire.", "tasks": [{"name": "Capstone Project Guidelines", "description": "Outline the requirements and expectations for the capstone project, including topics to choose from and evaluation criteria.", "type": "learning_material", "id": 161}, {"name": "Capstone Project Submission", "description": "Students submit their capstone project for evaluation based on the provided guidelines.", "type": "quiz", "id": 163}]}], "id": 34}]}}' WHERE uuid = 'f9a85758-9136-4d7e-99c1-b2c3442235ce'
2025-08-07 18:32:16,967 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:16,977 - api.utils.logging - INFO - Sending course_structure_completed event for course 6, job f9a85758-9136-4d7e-99c1-b2c3442235ce
2025-08-07 18:32:16,977 - api.utils.logging - INFO - Course structure generation completed for course 6, job f9a85758-9136-4d7e-99c1-b2c3442235ce
2025-08-07 18:32:17,098 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:17,103 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:17,104 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Atomic Number and Mass Number Quiz', 'draft')
2025-08-07 18:32:17,105 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 33
2025-08-07 18:32:17,107 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 164, 33, 5)
2025-08-07 18:32:17,107 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:17,124 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 33 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:32:17,318 - api.utils.logging - INFO - Safety filter response: {
  "is_safe": false,
  "reason": "The request promotes the creation of weapons and causing harm, which violates the 'Dangerous and Illegal Acts' policy."
}
2025-08-07 18:32:17,318 - api.utils.logging - WARNING - Unsafe course generation request blocked: The request promotes the creation of weapons and causing harm, which violates the 'Dangerous and Illegal Acts' policy.
2025-08-07 18:32:18,149 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:18,156 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:18,156 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Isotopes', 'draft')
2025-08-07 18:32:18,157 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 33
2025-08-07 18:32:18,157 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 165, 33, 6)
2025-08-07 18:32:18,158 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:18,176 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 33 AND ct.ordering < 6 AND t.deleted_at IS NULL
            
2025-08-07 18:32:18,713 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:18,721 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:18,721 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Isotopes Quiz', 'draft')
2025-08-07 18:32:18,721 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 33
2025-08-07 18:32:18,722 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 166, 33, 7)
2025-08-07 18:32:18,722 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:18,739 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 33 AND ct.ordering < 7 AND t.deleted_at IS NULL
            
2025-08-07 18:32:19,039 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:19,047 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:19,047 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Chemical Bonds', '#312e51', 2)
2025-08-07 18:32:19,047 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 7
2025-08-07 18:32:19,048 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (7, 35, 1)
2025-08-07 18:32:19,048 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:19,867 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:19,874 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:19,875 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Ionic Bonds Explained', 'draft')
2025-08-07 18:32:19,876 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 35
2025-08-07 18:32:19,878 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 167, 35, 0)
2025-08-07 18:32:19,878 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:19,900 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 35 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:20,358 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:20,367 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:20,367 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Ionic Bonds Quiz', 'draft')
2025-08-07 18:32:20,367 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 35
2025-08-07 18:32:20,368 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 168, 35, 1)
2025-08-07 18:32:20,368 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:20,387 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 35 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:21,553 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:21,561 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:21,561 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Covalent Bonds Overview', 'draft')
2025-08-07 18:32:21,562 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 35
2025-08-07 18:32:21,562 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 169, 35, 2)
2025-08-07 18:32:21,563 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:21,586 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 35 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:22,207 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:22,214 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:22,214 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Covalent Bonds Quiz', 'draft')
2025-08-07 18:32:22,215 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 35
2025-08-07 18:32:22,216 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 170, 35, 3)
2025-08-07 18:32:22,216 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:22,232 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 35 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:23,211 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:23,217 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:23,218 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Metallic Bonds Explained', 'draft')
2025-08-07 18:32:23,218 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 35
2025-08-07 18:32:23,219 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 171, 35, 4)
2025-08-07 18:32:23,219 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:23,235 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 35 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:32:23,837 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:23,843 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:23,843 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Metallic Bonds Quiz', 'draft')
2025-08-07 18:32:23,843 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 35
2025-08-07 18:32:23,844 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 172, 35, 5)
2025-08-07 18:32:23,844 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:23,857 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 35 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:32:24,098 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:24,104 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:24,104 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Basic Reactions', '#553c2d', 2)
2025-08-07 18:32:24,105 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 7
2025-08-07 18:32:24,105 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (7, 36, 2)
2025-08-07 18:32:24,105 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:25,276 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:25,281 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:25,281 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Overview of Chemical Reactions', 'draft')
2025-08-07 18:32:25,282 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 36
2025-08-07 18:32:25,283 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 173, 36, 0)
2025-08-07 18:32:25,283 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:25,300 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 36 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:25,784 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:25,789 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:25,789 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Types of Chemical Reactions Quiz', 'draft')
2025-08-07 18:32:25,789 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 36
2025-08-07 18:32:25,790 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 174, 36, 1)
2025-08-07 18:32:25,790 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:25,809 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 36 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:27,252 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:27,258 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:27,258 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Balancing Chemical Equations Explained', 'draft')
2025-08-07 18:32:27,258 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 36
2025-08-07 18:32:27,259 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 175, 36, 2)
2025-08-07 18:32:27,259 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:27,274 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 36 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:27,867 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:27,873 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:27,873 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Balancing Chemical Equations Quiz', 'draft')
2025-08-07 18:32:27,874 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 36
2025-08-07 18:32:27,874 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 176, 36, 3)
2025-08-07 18:32:27,875 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:27,893 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 36 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:29,099 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:29,105 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:29,105 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Introduction to Acid-Base Reactions', 'draft')
2025-08-07 18:32:29,105 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 36
2025-08-07 18:32:29,106 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 177, 36, 4)
2025-08-07 18:32:29,106 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:29,121 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 36 AND ct.ordering < 4 AND t.deleted_at IS NULL
            
2025-08-07 18:32:29,695 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:29,700 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:29,700 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Acid-Base Reactions Quiz', 'draft')
2025-08-07 18:32:29,701 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 36
2025-08-07 18:32:29,703 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 178, 36, 5)
2025-08-07 18:32:29,705 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:29,725 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 36 AND ct.ordering < 5 AND t.deleted_at IS NULL
            
2025-08-07 18:32:29,971 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:29,981 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:29,981 - api.utils.logging - INFO - Executing operation: INSERT INTO milestones (name, color, org_id) VALUES ('Conclusion and Capstone Project', '#2d3748', 2)
2025-08-07 18:32:29,981 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_milestones WHERE course_id = 7
2025-08-07 18:32:29,982 - api.utils.logging - INFO - Executing operation: INSERT INTO course_milestones (course_id, milestone_id, ordering) VALUES (7, 37, 3)
2025-08-07 18:32:29,982 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:31,427 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:31,431 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:31,431 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Summary of Key Concepts', 'draft')
2025-08-07 18:32:31,432 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 37
2025-08-07 18:32:31,432 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 179, 37, 0)
2025-08-07 18:32:31,432 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:31,446 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 37 AND ct.ordering < 0 AND t.deleted_at IS NULL
            
2025-08-07 18:32:31,970 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:31,980 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:31,980 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Course Summary Quiz', 'draft')
2025-08-07 18:32:31,981 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 37
2025-08-07 18:32:31,981 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 180, 37, 1)
2025-08-07 18:32:31,982 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:32,003 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 37 AND ct.ordering < 1 AND t.deleted_at IS NULL
            
2025-08-07 18:32:33,554 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:33,560 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:33,560 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'learning_material', 'Capstone Project Description', 'draft')
2025-08-07 18:32:33,560 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 37
2025-08-07 18:32:33,561 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 181, 37, 2)
2025-08-07 18:32:33,561 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:33,576 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 37 AND ct.ordering < 2 AND t.deleted_at IS NULL
            
2025-08-07 18:32:34,035 - api.utils.logging - INFO - Executing operation: SELECT org_id FROM courses WHERE id = 7
2025-08-07 18:32:34,041 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:34,041 - api.utils.logging - INFO - Executing operation: INSERT INTO tasks (org_id, type, title, status) VALUES (2, 'quiz', 'Capstone Project Submission', 'draft')
2025-08-07 18:32:34,041 - api.utils.logging - INFO - Executing operation: SELECT COALESCE(MAX(ordering), -1) FROM course_tasks WHERE course_id = 7 AND milestone_id = 37
2025-08-07 18:32:34,042 - api.utils.logging - INFO - Executing operation: INSERT INTO course_tasks (course_id, task_id, milestone_id, ordering) VALUES (7, 182, 37, 3)
2025-08-07 18:32:34,042 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:34,056 - api.utils.logging - INFO - Executing operation: 
            SELECT COUNT(*) FROM course_tasks ct
            INNER JOIN tasks t ON ct.task_id = t.id
            WHERE ct.course_id = 7 AND ct.milestone_id = 37 AND ct.ordering < 3 AND t.deleted_at IS NULL
            
2025-08-07 18:32:34,247 - api.utils.logging - INFO - Executing operation: BEGIN 
2025-08-07 18:32:34,247 - api.utils.logging - INFO - Executing operation: UPDATE course_generation_jobs SET status = 'pending', job_details = '{"course_description": "Introduction to Chemistry: Atomic structure, chemical bonds, and basic reactions for beginners", "intended_audience": "High school chemistry students", "instructions": null, "reference_material_s3_key": null, "openai_file_id": null, "course_structure": {"modules": [{"name": "Atomic Structure", "concepts": [{"name": "Atoms and Elements", "description": "Understanding the basic building blocks of matter, including the definition of atoms and elements, and their significance in chemistry.", "tasks": [{"name": "Introduction to Atoms and Elements", "description": "Explain what atoms and elements are, including their definitions and importance in chemistry.", "type": "learning_material", "id": 154}, {"name": "Atoms and Elements Quiz", "description": "A quiz to test understanding of atoms and elements, including definitions and examples.", "type": "quiz", "id": 156}]}, {"name": "Subatomic Particles", "description": "Exploring the components of atoms, including protons, neutrons, and electrons, and their roles in atomic structure.", "tasks": [{"name": "Overview of Subatomic Particles", "description": "Describe the three main subatomic particles: protons, neutrons, and electrons, including their charges and locations within the atom.", "type": "learning_material", "id": 158}, {"name": "Subatomic Particles Quiz", "description": "A quiz to assess knowledge of subatomic particles and their characteristics.", "type": "quiz", "id": 160}]}, {"name": "Atomic Number and Mass Number", "description": "Understanding the concepts of atomic number and mass number, and how they relate to the identity of an element.", "tasks": [{"name": "Atomic Number and Mass Number Explained", "description": "Define atomic number and mass number, and explain their significance in identifying elements.", "type": "learning_material", "id": 162}, {"name": "Atomic Number and Mass Number Quiz", "description": "A quiz to evaluate understanding of atomic number and mass number concepts.", "type": "quiz", "id": 164}]}, {"name": "Isotopes", "description": "Learning about isotopes, their definition, and their applications in chemistry and real-world scenarios.", "tasks": [{"name": "Introduction to Isotopes", "description": "Explain what isotopes are, including examples and their importance in various fields.", "type": "learning_material", "id": 165}, {"name": "Isotopes Quiz", "description": "A quiz to test knowledge of isotopes and their characteristics.", "type": "quiz", "id": 166}]}], "id": 33}, {"name": "Chemical Bonds", "concepts": [{"name": "Ionic Bonds", "description": "Understanding ionic bonds, how they form, and their properties.", "tasks": [{"name": "Ionic Bonds Explained", "description": "Describe the formation of ionic bonds and their characteristics, including examples.", "type": "learning_material", "id": 167}, {"name": "Ionic Bonds Quiz", "description": "A quiz to assess understanding of ionic bonds and their properties.", "type": "quiz", "id": 168}]}, {"name": "Covalent Bonds", "description": "Exploring covalent bonds, their formation, and how they differ from ionic bonds.", "tasks": [{"name": "Covalent Bonds Overview", "description": "Explain covalent bonds, including how they form and their properties compared to ionic bonds.", "type": "learning_material", "id": 169}, {"name": "Covalent Bonds Quiz", "description": "A quiz to evaluate understanding of covalent bonds and their characteristics.", "type": "quiz", "id": 170}]}, {"name": "Metallic Bonds", "description": "Learning about metallic bonds, their properties, and their significance in materials science.", "tasks": [{"name": "Metallic Bonds Explained", "description": "Describe metallic bonds, including their formation and properties.", "type": "learning_material", "id": 171}, {"name": "Metallic Bonds Quiz", "description": "A quiz to test knowledge of metallic bonds and their characteristics.", "type": "quiz", "id": 172}]}], "id": 35}, {"name": "Basic Reactions", "concepts": [{"name": "Types of Chemical Reactions", "description": "Understanding the different types of chemical reactions, including synthesis, decomposition, single replacement, and double replacement.", "tasks": [{"name": "Overview of Chemical Reactions", "description": "Explain the various types of chemical reactions and provide examples for each type.", "type": "learning_material", "id": 173}, {"name": "Types of Chemical Reactions Quiz", "description": "A quiz to assess understanding of different types of chemical reactions.", "type": "quiz", "id": 174}]}, {"name": "Balancing Chemical Equations", "description": "Learning how to balance chemical equations, a fundamental skill in chemistry.", "tasks": [{"name": "Balancing Chemical Equations Explained", "description": "Describe the process of balancing chemical equations and its importance in chemical reactions.", "type": "learning_material", "id": 175}, {"name": "Balancing Chemical Equations Quiz", "description": "A quiz to test the ability to balance chemical equations with practice problems.", "type": "quiz", "id": 176}]}, {"name": "Acid-Base Reactions", "description": "Exploring acid-base reactions, their characteristics, and examples.", "tasks": [{"name": "Introduction to Acid-Base Reactions", "description": "Explain what acid-base reactions are, including their properties and examples.", "type": "learning_material", "id": 177}, {"name": "Acid-Base Reactions Quiz", "description": "A quiz to evaluate understanding of acid-base reactions and their characteristics.", "type": "quiz", "id": 178}]}], "id": 36}, {"name": "Conclusion and Capstone Project", "concepts": [{"name": "Course Summary", "description": "A summary of the key concepts covered in the course, reinforcing the learning objectives.", "tasks": [{"name": "Summary of Key Concepts", "description": "Provide a summary of the main topics covered in the course, including atomic structure, chemical bonds, and basic reactions.", "type": "learning_material", "id": 179}, {"name": "Course Summary Quiz", "description": "A quiz to assess overall understanding of the course material.", "type": "quiz", "id": 180}]}, {"name": "Capstone Project", "description": "An integrative project that requires students to apply all the concepts learned in the course.", "tasks": [{"name": "Capstone Project Description", "description": "Outline the requirements for the capstone project, which involves creating a presentation or report on a chosen chemistry topic.", "type": "learning_material", "id": 181}, {"name": "Capstone Project Submission", "description": "Instructions for submitting the capstone project, including evaluation criteria.", "type": "quiz", "id": 182}]}], "id": 37}]}}' WHERE uuid = 'f01c9b46-3343-4fea-bbc2-ebf8e216307f'
2025-08-07 18:32:34,247 - api.utils.logging - INFO - Executing operation: COMMIT
2025-08-07 18:32:34,257 - api.utils.logging - INFO - Sending course_structure_completed event for course 7, job f01c9b46-3343-4fea-bbc2-ebf8e216307f
2025-08-07 18:32:34,257 - api.utils.logging - INFO - Course structure generation completed for course 7, job f01c9b46-3343-4fea-bbc2-ebf8e216307f
